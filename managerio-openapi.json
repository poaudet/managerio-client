{
    "openapi": "3.0.0",
    "info": {
      "title": "Manager API",
      "version": "24.11.6.1925"
    },
    "servers": [
      {
        "url": "https://comptabilite.audetfinancement.com/api2"
      }
    ],
    "paths": {
      "/access-tokens": {
        "get": {
          "operationId": "GetAccessTokens",
          "summary": "Access Tokens",
          "description": "Retrieve list of access tokens. For more information, see https://www.manager.io/guides?access-tokens",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "Name",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "Name",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/amortization-entries": {
        "get": {
          "operationId": "GetAmortizationEntries",
          "summary": "Amortization Entries",
          "description": "Retrieve list of amortization entries. For more information, see https://www.manager.io/guides?amortization-entries",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "Date",
                  "Reference",
                  "Description",
                  "IntangibleAssets",
                  "Division",
                  "Amount",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "Date",
                    "Reference",
                    "Description",
                    "IntangibleAssets",
                    "Division",
                    "Amount",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/balance-sheet-account-starting-balance-list": {
        "get": {
          "operationId": "GetBalanceSheetAccountStartingBalanceList",
          "summary": "BalanceSheetAccountStartingBalanceList",
          "description": "Retrieve list of balancesheetaccountstartingbalancelist. For more information, see https://www.manager.io/guides?balance-sheet-account-starting-balance-list",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "BalanceSheetAccount",
                  "Debit",
                  "Credit",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "BalanceSheetAccount",
                    "Debit",
                    "Credit",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/balance-sheet-transactions": {
        "get": {
          "operationId": "GetBalanceSheetTransactions",
          "summary": "BalanceSheetTransactions",
          "description": "Retrieve list of balancesheettransactions. For more information, see https://www.manager.io/guides?balance-sheet-transactions",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Name",
                  "BaseBalance",
                  "AccountBalance",
                  "Date",
                  "Transaction",
                  "BankOrCashAccount",
                  "ExpenseClaimPayer",
                  "Customer",
                  "Supplier",
                  "Employee",
                  "Investment",
                  "CapitalAccount",
                  "Description",
                  "Qty",
                  "Balance",
                  "Name",
                  "Qty",
                  "MarketValue",
                  "Investment",
                  "Qty",
                  "MarketValue",
                  "ClosingBalance",
                  "Date",
                  "Transaction",
                  "BankOrCashAccount",
                  "ExpenseClaimPayer",
                  "Customer",
                  "Supplier",
                  "Employee",
                  "InventoryItem",
                  "CapitalAccount",
                  "Description",
                  "Qty",
                  "Balance",
                  "Name",
                  "Qty",
                  "AverageCost",
                  "TotalCost",
                  "Name",
                  "Balance",
                  "Date",
                  "Transaction",
                  "ConversionMarkup",
                  "Debit",
                  "Credit",
                  "Account",
                  "ForeignBalance",
                  "ConvertedBalance",
                  "ClosingBalance",
                  "Date",
                  "Transaction",
                  "Account",
                  "BankOrCashAccount",
                  "ExpenseClaimPayer",
                  "Customer",
                  "Supplier",
                  "Employee",
                  "InventoryKit",
                  "InventoryItem",
                  "Investment",
                  "FixedAsset",
                  "IntangibleAsset",
                  "CapitalAccount",
                  "SpecialAccount",
                  "Description",
                  "Tax",
                  "Qty",
                  "QtyReduction",
                  "PurchaseCost",
                  "TransactionAmount",
                  "CurrencyAmount",
                  "Debit",
                  "Credit"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Name",
                    "BaseBalance",
                    "AccountBalance",
                    "Date",
                    "Transaction",
                    "BankOrCashAccount",
                    "ExpenseClaimPayer",
                    "Customer",
                    "Supplier",
                    "Employee",
                    "Investment",
                    "CapitalAccount",
                    "Description",
                    "Qty",
                    "Balance",
                    "Name",
                    "Qty",
                    "MarketValue",
                    "Investment",
                    "Qty",
                    "MarketValue",
                    "ClosingBalance",
                    "Date",
                    "Transaction",
                    "BankOrCashAccount",
                    "ExpenseClaimPayer",
                    "Customer",
                    "Supplier",
                    "Employee",
                    "InventoryItem",
                    "CapitalAccount",
                    "Description",
                    "Qty",
                    "Balance",
                    "Name",
                    "Qty",
                    "AverageCost",
                    "TotalCost",
                    "Name",
                    "Balance",
                    "Date",
                    "Transaction",
                    "ConversionMarkup",
                    "Debit",
                    "Credit",
                    "Account",
                    "ForeignBalance",
                    "ConvertedBalance",
                    "ClosingBalance",
                    "Date",
                    "Transaction",
                    "Account",
                    "BankOrCashAccount",
                    "ExpenseClaimPayer",
                    "Customer",
                    "Supplier",
                    "Employee",
                    "InventoryKit",
                    "InventoryItem",
                    "Investment",
                    "FixedAsset",
                    "IntangibleAsset",
                    "CapitalAccount",
                    "SpecialAccount",
                    "Description",
                    "Tax",
                    "Qty",
                    "QtyReduction",
                    "PurchaseCost",
                    "TransactionAmount",
                    "CurrencyAmount",
                    "Debit",
                    "Credit"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/bank-and-cash-accounts": {
        "get": {
          "operationId": "GetBankAndCashAccounts",
          "summary": "Bank and Cash Accounts",
          "description": "Retrieve list of bank and cash accounts. For more information, see https://www.manager.io/guides?bank-and-cash-accounts",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "Code",
                  "Name",
                  "ControlAccount",
                  "Division",
                  "UncategorizedReceipts",
                  "UncategorizedPayments",
                  "ClearedBalance",
                  "PendingDeposits",
                  "PendingWithdrawals",
                  "ActualBalance",
                  "AvailableCredit",
                  "LastBankReconciliation",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "Code",
                    "Name",
                    "ControlAccount",
                    "Division",
                    "UncategorizedReceipts",
                    "UncategorizedPayments",
                    "ClearedBalance",
                    "PendingDeposits",
                    "PendingWithdrawals",
                    "ActualBalance",
                    "AvailableCredit",
                    "LastBankReconciliation",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/bank-feed-providers": {
        "get": {
          "operationId": "GetBankFeedProviders",
          "summary": "Bank Feed Providers",
          "description": "Retrieve list of bank feed providers. For more information, see https://www.manager.io/guides?bank-feed-providers",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "Name",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "Name",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/bank-reconciliations": {
        "get": {
          "operationId": "GetBankReconciliations",
          "summary": "Bank Reconciliations",
          "description": "Retrieve list of bank reconciliations. For more information, see https://www.manager.io/guides?bank-reconciliations",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "Date",
                  "BankAccount",
                  "StatementBalance",
                  "Discrepancy",
                  "Status",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "Date",
                    "BankAccount",
                    "StatementBalance",
                    "Discrepancy",
                    "Status",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/bank-or-cash-account-starting-balance-list": {
        "get": {
          "operationId": "GetBankOrCashAccountStartingBalanceList",
          "summary": "BankOrCashAccountStartingBalanceList",
          "description": "Retrieve list of bankorcashaccountstartingbalancelist. For more information, see https://www.manager.io/guides?bank-or-cash-account-starting-balance-list",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "BankOrCashAccount",
                  "ClearedBalance",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "BankOrCashAccount",
                    "ClearedBalance",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/billable-time": {
        "get": {
          "operationId": "GetBillableTime",
          "summary": "Billable Time",
          "description": "Retrieve list of billable time. For more information, see https://www.manager.io/guides?billable-time",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "Date",
                  "Customer",
                  "Description",
                  "TimeSpent",
                  "Division",
                  "Amount",
                  "Status",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "Date",
                    "Customer",
                    "Description",
                    "TimeSpent",
                    "Division",
                    "Amount",
                    "Status",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/capital-accounts": {
        "get": {
          "operationId": "GetCapitalAccounts",
          "summary": "Capital Accounts",
          "description": "Retrieve list of capital accounts. For more information, see https://www.manager.io/guides?capital-accounts",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "Code",
                  "Name",
                  "ControlAccount",
                  "Division",
                  "Balance",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "Code",
                    "Name",
                    "ControlAccount",
                    "Division",
                    "Balance",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/capital-account-starting-balance-list": {
        "get": {
          "operationId": "GetCapitalAccountStartingBalanceList",
          "summary": "CapitalAccountStartingBalanceList",
          "description": "Retrieve list of capitalaccountstartingbalancelist. For more information, see https://www.manager.io/guides?capital-account-starting-balance-list",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "CapitalAccount",
                  "Balance",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "CapitalAccount",
                    "Balance",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/chart-of-accounts": {
        "get": {
          "operationId": "GetChartOfAccounts",
          "summary": "Chart of Accounts",
          "description": "Retrieve list of chart of accounts. For more information, see https://www.manager.io/guides?chart-of-accounts",
          "parameters": [
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Key",
                    "Code",
                    "Name"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/checkbox-custom-fields": {
        "get": {
          "operationId": "GetCheckboxCustomFields",
          "summary": "Checkbox Custom Fields",
          "description": "Retrieve list of checkbox custom fields. For more information, see https://www.manager.io/guides?checkbox-custom-fields",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "Name",
                  "Placement",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "Name",
                    "Placement",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/classic-custom-fields": {
        "get": {
          "operationId": "GetClassicCustomFields",
          "summary": "Classic Custom Fields",
          "description": "Retrieve list of classic custom fields. For more information, see https://www.manager.io/guides?classic-custom-fields",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "Name",
                  "Placement",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "Name",
                    "Placement",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/credit-notes": {
        "get": {
          "operationId": "GetCreditNotes",
          "summary": "Credit Notes",
          "description": "Retrieve list of credit notes. For more information, see https://www.manager.io/guides?credit-notes",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "Date",
                  "Reference",
                  "Customer",
                  "SalesInvoice",
                  "Description",
                  "Amount",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "Date",
                    "Reference",
                    "Customer",
                    "SalesInvoice",
                    "Description",
                    "Amount",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/credit-note-footers": {
        "get": {
          "operationId": "GetCreditNoteFooters",
          "summary": "CreditNoteFooters",
          "description": "Retrieve list of creditnotefooters. For more information, see https://www.manager.io/guides?credit-note-footers",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "Name",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "Name",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/credit-note-lines": {
        "get": {
          "operationId": "GetCreditNoteLines",
          "summary": "CreditNoteLines",
          "description": "Retrieve list of creditnotelines. For more information, see https://www.manager.io/guides?credit-note-lines",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Date",
                  "Reference",
                  "Customer",
                  "Description",
                  "Item",
                  "Account",
                  "LineDescription",
                  "Qty",
                  "UnitPrice",
                  "Project",
                  "Division",
                  "TaxCode",
                  "TaxAmount",
                  "Amount"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Date",
                    "Reference",
                    "Customer",
                    "Description",
                    "Item",
                    "Account",
                    "LineDescription",
                    "Qty",
                    "UnitPrice",
                    "Project",
                    "Division",
                    "TaxCode",
                    "TaxAmount",
                    "Amount"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/customers": {
        "get": {
          "operationId": "GetCustomers",
          "summary": "Customers",
          "description": "Retrieve list of customers. For more information, see https://www.manager.io/guides?customers",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "Code",
                  "Name",
                  "EmailAddress",
                  "ControlAccount",
                  "Division",
                  "BillingAddress",
                  "DeliveryAddress",
                  "Receipts",
                  "Payments",
                  "SalesQuotes",
                  "SalesOrders",
                  "SalesInvoices",
                  "CreditNotes",
                  "DeliveryNotes",
                  "QtyToDeliver",
                  "Uninvoiced",
                  "AccountsReceivable",
                  "WithholdingTaxReceivable",
                  "Status",
                  "AvailableCredit",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "Code",
                    "Name",
                    "EmailAddress",
                    "ControlAccount",
                    "Division",
                    "BillingAddress",
                    "DeliveryAddress",
                    "Receipts",
                    "Payments",
                    "SalesQuotes",
                    "SalesOrders",
                    "SalesInvoices",
                    "CreditNotes",
                    "DeliveryNotes",
                    "QtyToDeliver",
                    "Uninvoiced",
                    "AccountsReceivable",
                    "WithholdingTaxReceivable",
                    "Status",
                    "AvailableCredit",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/customers-qty-to-deliver": {
        "get": {
          "operationId": "GetCustomersQtyToDeliver",
          "summary": "CustomersQtyToDeliver",
          "description": "Retrieve list of customersqtytodeliver. For more information, see https://www.manager.io/guides?customers-qty-to-deliver",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Customer",
                  "InventoryItem",
                  "QtyToDeliver"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Customer",
                    "InventoryItem",
                    "QtyToDeliver"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/date-custom-fields": {
        "get": {
          "operationId": "GetDateCustomFields",
          "summary": "Date Custom Fields",
          "description": "Retrieve list of date custom fields. For more information, see https://www.manager.io/guides?date-custom-fields",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "Name",
                  "Placement",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "Name",
                    "Placement",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/debit-notes": {
        "get": {
          "operationId": "GetDebitNotes",
          "summary": "Debit Notes",
          "description": "Retrieve list of debit notes. For more information, see https://www.manager.io/guides?debit-notes",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "Date",
                  "Reference",
                  "Supplier",
                  "PurchaseInvoice",
                  "Description",
                  "Amount",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "Date",
                    "Reference",
                    "Supplier",
                    "PurchaseInvoice",
                    "Description",
                    "Amount",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/debit-note-footers": {
        "get": {
          "operationId": "GetDebitNoteFooters",
          "summary": "DebitNoteFooters",
          "description": "Retrieve list of debitnotefooters. For more information, see https://www.manager.io/guides?debit-note-footers",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "Name",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "Name",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/debit-note-lines": {
        "get": {
          "operationId": "GetDebitNoteLines",
          "summary": "DebitNoteLines",
          "description": "Retrieve list of debitnotelines. For more information, see https://www.manager.io/guides?debit-note-lines",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "IssueDate",
                  "Reference",
                  "Supplier",
                  "Description",
                  "Item",
                  "Account",
                  "LineDescription",
                  "Qty",
                  "UnitPrice",
                  "Project",
                  "Division",
                  "TaxCode",
                  "TaxAmount",
                  "Amount"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "IssueDate",
                    "Reference",
                    "Supplier",
                    "Description",
                    "Item",
                    "Account",
                    "LineDescription",
                    "Qty",
                    "UnitPrice",
                    "Project",
                    "Division",
                    "TaxCode",
                    "TaxAmount",
                    "Amount"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/delivery-notes": {
        "get": {
          "operationId": "GetDeliveryNotes",
          "summary": "Delivery Notes",
          "description": "Retrieve list of delivery notes. For more information, see https://www.manager.io/guides?delivery-notes",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "DeliveryDate",
                  "Reference",
                  "OrderNumber",
                  "InvoiceNumber",
                  "Customer",
                  "InventoryLocation",
                  "Description",
                  "QtyDelivered",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "DeliveryDate",
                    "Reference",
                    "OrderNumber",
                    "InvoiceNumber",
                    "Customer",
                    "InventoryLocation",
                    "Description",
                    "QtyDelivered",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/delivery-note-footers": {
        "get": {
          "operationId": "GetDeliveryNoteFooters",
          "summary": "DeliveryNoteFooters",
          "description": "Retrieve list of deliverynotefooters. For more information, see https://www.manager.io/guides?delivery-note-footers",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "Name",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "Name",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/delivery-note-lines": {
        "get": {
          "operationId": "GetDeliveryNoteLines",
          "summary": "DeliveryNoteLines",
          "description": "Retrieve list of deliverynotelines. For more information, see https://www.manager.io/guides?delivery-note-lines",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Date",
                  "Reference",
                  "Customer",
                  "Description",
                  "Item",
                  "LineDescription",
                  "Qty"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Date",
                    "Reference",
                    "Customer",
                    "Description",
                    "Item",
                    "LineDescription",
                    "Qty"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/depreciation-entries": {
        "get": {
          "operationId": "GetDepreciationEntries",
          "summary": "Depreciation Entries",
          "description": "Retrieve list of depreciation entries. For more information, see https://www.manager.io/guides?depreciation-entries",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "Date",
                  "Reference",
                  "Description",
                  "FixedAssets",
                  "Divisions",
                  "Amount",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "Date",
                    "Reference",
                    "Description",
                    "FixedAssets",
                    "Divisions",
                    "Amount",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/divisions": {
        "get": {
          "operationId": "GetDivisions",
          "summary": "Divisions",
          "description": "Retrieve list of divisions. For more information, see https://www.manager.io/guides?divisions",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "Code",
                  "Name",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "Code",
                    "Name",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/employees": {
        "get": {
          "operationId": "GetEmployees",
          "summary": "Employees",
          "description": "Retrieve list of employees. For more information, see https://www.manager.io/guides?employees",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "Code",
                  "Name",
                  "EmailAddress",
                  "ControlAccount",
                  "Division",
                  "Balance",
                  "Status",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "Code",
                    "Name",
                    "EmailAddress",
                    "ControlAccount",
                    "Division",
                    "Balance",
                    "Status",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/employee-starting-balance-list": {
        "get": {
          "operationId": "GetEmployeeStartingBalanceList",
          "summary": "EmployeeStartingBalanceList",
          "description": "Retrieve list of employeestartingbalancelist. For more information, see https://www.manager.io/guides?employee-starting-balance-list",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "Employee",
                  "Balance",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "Employee",
                    "Balance",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/exchange-rates": {
        "get": {
          "operationId": "GetExchangeRates",
          "summary": "Exchange Rates",
          "description": "Retrieve list of exchange rates. For more information, see https://www.manager.io/guides?exchange-rates",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "Date",
                  "Currency",
                  "Rate",
                  "Transactions",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "Date",
                    "Currency",
                    "Rate",
                    "Transactions",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/expense-claims": {
        "get": {
          "operationId": "GetExpenseClaims",
          "summary": "Expense Claims",
          "description": "Retrieve list of expense claims. For more information, see https://www.manager.io/guides?expense-claims",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "Date",
                  "Reference",
                  "PaidBy",
                  "Payee",
                  "Description",
                  "Accounts",
                  "Amount",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "Date",
                    "Reference",
                    "PaidBy",
                    "Payee",
                    "Description",
                    "Accounts",
                    "Amount",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/expense-claim-footers": {
        "get": {
          "operationId": "GetExpenseClaimFooters",
          "summary": "ExpenseClaimFooters",
          "description": "Retrieve list of expenseclaimfooters. For more information, see https://www.manager.io/guides?expense-claim-footers",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "Name",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "Name",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/expense-claim-lines": {
        "get": {
          "operationId": "GetExpenseClaimLines",
          "summary": "ExpenseClaimLines",
          "description": "Retrieve list of expenseclaimlines. For more information, see https://www.manager.io/guides?expense-claim-lines",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Date",
                  "Reference",
                  "Payer",
                  "Customer",
                  "Supplier",
                  "Description",
                  "Item",
                  "Account",
                  "LineDescription",
                  "Qty",
                  "UnitPrice",
                  "Project",
                  "Division",
                  "TaxCode",
                  "TaxAmount",
                  "Amount"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Date",
                    "Reference",
                    "Payer",
                    "Customer",
                    "Supplier",
                    "Description",
                    "Item",
                    "Account",
                    "LineDescription",
                    "Qty",
                    "UnitPrice",
                    "Project",
                    "Division",
                    "TaxCode",
                    "TaxAmount",
                    "Amount"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/fixed-assets": {
        "get": {
          "operationId": "GetFixedAssets",
          "summary": "Fixed Assets",
          "description": "Retrieve list of fixed assets. For more information, see https://www.manager.io/guides?fixed-assets",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "Code",
                  "Name",
                  "Description",
                  "DepreciationRate",
                  "ControlAccount",
                  "Division",
                  "AcquisitionCost",
                  "Depreciation",
                  "BookValue",
                  "Status",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "Code",
                    "Name",
                    "Description",
                    "DepreciationRate",
                    "ControlAccount",
                    "Division",
                    "AcquisitionCost",
                    "Depreciation",
                    "BookValue",
                    "Status",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/fixed-asset-starting-balance-list": {
        "get": {
          "operationId": "GetFixedAssetStartingBalanceList",
          "summary": "FixedAssetStartingBalanceList",
          "description": "Retrieve list of fixedassetstartingbalancelist. For more information, see https://www.manager.io/guides?fixed-asset-starting-balance-list",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "FixedAsset",
                  "AcquisitionCost",
                  "AccumulatedDepreciation",
                  "BookValue",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "FixedAsset",
                    "AcquisitionCost",
                    "AccumulatedDepreciation",
                    "BookValue",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/folders": {
        "get": {
          "operationId": "GetFolders",
          "summary": "Folders",
          "description": "Retrieve list of folders. For more information, see https://www.manager.io/guides?folders",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "Description",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "Description",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/foreign-currencies": {
        "get": {
          "operationId": "GetForeignCurrencies",
          "summary": "Foreign Currencies",
          "description": "Retrieve list of foreign currencies. For more information, see https://www.manager.io/guides?foreign-currencies",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "Code",
                  "Name",
                  "Symbol",
                  "DecimalPlaces",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "Code",
                    "Name",
                    "Symbol",
                    "DecimalPlaces",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/goods-receipts": {
        "get": {
          "operationId": "GetGoodsReceipts",
          "summary": "Goods Receipts",
          "description": "Retrieve list of goods receipts. For more information, see https://www.manager.io/guides?goods-receipts",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "Date",
                  "Reference",
                  "OrderNumber",
                  "InvoiceNumber",
                  "Supplier",
                  "InventoryLocation",
                  "Description",
                  "QtyReceived",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "Date",
                    "Reference",
                    "OrderNumber",
                    "InvoiceNumber",
                    "Supplier",
                    "InventoryLocation",
                    "Description",
                    "QtyReceived",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/goods-receipt-footers": {
        "get": {
          "operationId": "GetGoodsReceiptFooters",
          "summary": "GoodsReceiptFooters",
          "description": "Retrieve list of goodsreceiptfooters. For more information, see https://www.manager.io/guides?goods-receipt-footers",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "Name",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "Name",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/goods-receipt-lines": {
        "get": {
          "operationId": "GetGoodsReceiptLines",
          "summary": "GoodsReceiptLines",
          "description": "Retrieve list of goodsreceiptlines. For more information, see https://www.manager.io/guides?goods-receipt-lines",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Date",
                  "Reference",
                  "Supplier",
                  "Description",
                  "Item",
                  "LineDescription",
                  "Qty"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Date",
                    "Reference",
                    "Supplier",
                    "Description",
                    "Item",
                    "LineDescription",
                    "Qty"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/history": {
        "get": {
          "operationId": "GetHistory",
          "summary": "History",
          "description": "Retrieve list of history. For more information, see https://www.manager.io/guides?history",
          "parameters": [
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Timestamp",
                    "User",
                    "Description",
                    "Action"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/intangible-assets": {
        "get": {
          "operationId": "GetIntangibleAssets",
          "summary": "Intangible Assets",
          "description": "Retrieve list of intangible assets. For more information, see https://www.manager.io/guides?intangible-assets",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "Code",
                  "Name",
                  "Description",
                  "AmortizationRate",
                  "ControlAccount",
                  "AcquisitionCost",
                  "Amortization",
                  "BookValue",
                  "Status",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "Code",
                    "Name",
                    "Description",
                    "AmortizationRate",
                    "ControlAccount",
                    "AcquisitionCost",
                    "Amortization",
                    "BookValue",
                    "Status",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/intangible-asset-starting-balance-list": {
        "get": {
          "operationId": "GetIntangibleAssetStartingBalanceList",
          "summary": "IntangibleAssetStartingBalanceList",
          "description": "Retrieve list of intangibleassetstartingbalancelist. For more information, see https://www.manager.io/guides?intangible-asset-starting-balance-list",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "IntangibleAsset",
                  "AcquisitionCost",
                  "AccumulatedAmortization",
                  "BookValue",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "IntangibleAsset",
                    "AcquisitionCost",
                    "AccumulatedAmortization",
                    "BookValue",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/inter-account-transfers": {
        "get": {
          "operationId": "GetInterAccountTransfers",
          "summary": "Inter Account Transfers",
          "description": "Retrieve list of inter account transfers. For more information, see https://www.manager.io/guides?inter-account-transfers",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "Date",
                  "Reference",
                  "PaidFrom",
                  "ReceivedIn",
                  "Description",
                  "Amount",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "Date",
                    "Reference",
                    "PaidFrom",
                    "ReceivedIn",
                    "Description",
                    "Amount",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/inter-account-transfer-footers": {
        "get": {
          "operationId": "GetInterAccountTransferFooters",
          "summary": "InterAccountTransferFooters",
          "description": "Retrieve list of interaccounttransferfooters. For more information, see https://www.manager.io/guides?inter-account-transfer-footers",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "Name",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "Name",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/inventory-items": {
        "get": {
          "operationId": "GetInventoryItems",
          "summary": "Inventory Items",
          "description": "Retrieve list of inventory items. For more information, see https://www.manager.io/guides?inventory-items",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "ItemCode",
                  "ItemName",
                  "ControlAccount",
                  "Division",
                  "Description",
                  "SalePrice",
                  "PurchasePrice",
                  "UnitName",
                  "QtyOwned",
                  "QtyToDeliver",
                  "QtyToReceive",
                  "QtyOnHand",
                  "QtyReserved",
                  "QtyAvailable",
                  "QtyOnOrder",
                  "QtyToBeAvailable",
                  "QtyDesired",
                  "QtyToOrder",
                  "AverageCost",
                  "TotalCost",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "ItemCode",
                    "ItemName",
                    "ControlAccount",
                    "Division",
                    "Description",
                    "SalePrice",
                    "PurchasePrice",
                    "UnitName",
                    "QtyOwned",
                    "QtyToDeliver",
                    "QtyToReceive",
                    "QtyOnHand",
                    "QtyReserved",
                    "QtyAvailable",
                    "QtyOnOrder",
                    "QtyToBeAvailable",
                    "QtyDesired",
                    "QtyToOrder",
                    "AverageCost",
                    "TotalCost",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/inventory-kits": {
        "get": {
          "operationId": "GetInventoryKits",
          "summary": "Inventory Kits",
          "description": "Retrieve list of inventory kits. For more information, see https://www.manager.io/guides?inventory-kits",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "ItemCode",
                  "ItemName",
                  "UnitName",
                  "SalesPrice",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "ItemCode",
                    "ItemName",
                    "UnitName",
                    "SalesPrice",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/inventory-locations": {
        "get": {
          "operationId": "GetInventoryLocations",
          "summary": "Inventory Locations",
          "description": "Retrieve list of inventory locations. For more information, see https://www.manager.io/guides?inventory-locations",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "Code",
                  "Name",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "Code",
                    "Name",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/inventory-revaluations": {
        "get": {
          "operationId": "GetInventoryRevaluations",
          "summary": "Inventory Revaluations",
          "description": "Retrieve list of inventory revaluations. For more information, see https://www.manager.io/guides?inventory-revaluations",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "Date",
                  "InventoryItem",
                  "AverageCost",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "Date",
                    "InventoryItem",
                    "AverageCost",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/inventory-transfers": {
        "get": {
          "operationId": "GetInventoryTransfers",
          "summary": "Inventory Transfers",
          "description": "Retrieve list of inventory transfers. For more information, see https://www.manager.io/guides?inventory-transfers",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "Date",
                  "Reference",
                  "From",
                  "To",
                  "Description",
                  "InventoryItems",
                  "Qty",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "Date",
                    "Reference",
                    "From",
                    "To",
                    "Description",
                    "InventoryItems",
                    "Qty",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/inventory-write-offs": {
        "get": {
          "operationId": "GetInventoryWriteOffs",
          "summary": "Inventory Write-offs",
          "description": "Retrieve list of inventory write-offs. For more information, see https://www.manager.io/guides?inventory-write-offs",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "Date",
                  "Reference",
                  "InventoryLocation",
                  "Description",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "Date",
                    "Reference",
                    "InventoryLocation",
                    "Description",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/inventory-item-qty-on-hand": {
        "get": {
          "operationId": "GetInventoryItemQtyOnHand",
          "summary": "InventoryItemQtyOnHand",
          "description": "Retrieve list of inventoryitemqtyonhand. For more information, see https://www.manager.io/guides?inventory-item-qty-on-hand",
          "parameters": [
            {
              "name": "inventoryItem",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "InventoryLocation",
                  "QtyOnHand"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "InventoryLocation",
                    "QtyOnHand"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/inventory-item-qty-on-hand-transactions": {
        "get": {
          "operationId": "GetInventoryItemQtyOnHandTransactions",
          "summary": "InventoryItemQtyOnHandTransactions",
          "description": "Retrieve list of inventoryitemqtyonhandtransactions. For more information, see https://www.manager.io/guides?inventory-item-qty-on-hand-transactions",
          "parameters": [
            {
              "name": "inventoryItem",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "inventoryLocation",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Date",
                  "Transaction",
                  "Customer",
                  "InventoryItem",
                  "Supplier",
                  "InventoryLocation",
                  "QtyOnHand"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Date",
                    "Transaction",
                    "Customer",
                    "InventoryItem",
                    "Supplier",
                    "InventoryLocation",
                    "QtyOnHand"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/inventory-item-qty-on-order": {
        "get": {
          "operationId": "GetInventoryItemQtyOnOrder",
          "summary": "InventoryItemQtyOnOrder",
          "description": "Retrieve list of inventoryitemqtyonorder. For more information, see https://www.manager.io/guides?inventory-item-qty-on-order",
          "parameters": [
            {
              "name": "inventoryItem",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Date",
                  "PurchaseOrder",
                  "Supplier",
                  "InventoryItem",
                  "QtyOrdered",
                  "QtyReceived",
                  "QtyInvoiced",
                  "QtyOnOrder"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Date",
                    "PurchaseOrder",
                    "Supplier",
                    "InventoryItem",
                    "QtyOrdered",
                    "QtyReceived",
                    "QtyInvoiced",
                    "QtyOnOrder"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/inventory-item-qty-on-order-transactions": {
        "get": {
          "operationId": "GetInventoryItemQtyOnOrderTransactions",
          "summary": "InventoryItemQtyOnOrderTransactions",
          "description": "Retrieve list of inventoryitemqtyonordertransactions. For more information, see https://www.manager.io/guides?inventory-item-qty-on-order-transactions",
          "parameters": [
            {
              "name": "inventoryItem",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "purchaseOrder",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Date",
                  "Transaction",
                  "Supplier",
                  "InventoryItem",
                  "QtyOnOrder"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Date",
                    "Transaction",
                    "Supplier",
                    "InventoryItem",
                    "QtyOnOrder"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/inventory-item-qty-owned": {
        "get": {
          "operationId": "GetInventoryItemQtyOwned",
          "summary": "InventoryItemQtyOwned",
          "description": "Retrieve list of inventoryitemqtyowned. For more information, see https://www.manager.io/guides?inventory-item-qty-owned",
          "parameters": [
            {
              "name": "inventoryItem",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Date",
                  "Transaction",
                  "Reference",
                  "InventoryItem",
                  "BankOrCashAccount",
                  "Customer",
                  "Supplier",
                  "Description",
                  "LineDescription",
                  "QtyOwned"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Date",
                    "Transaction",
                    "Reference",
                    "InventoryItem",
                    "BankOrCashAccount",
                    "Customer",
                    "Supplier",
                    "Description",
                    "LineDescription",
                    "QtyOwned"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/inventory-item-qty-reserved": {
        "get": {
          "operationId": "GetInventoryItemQtyReserved",
          "summary": "InventoryItemQtyReserved",
          "description": "Retrieve list of inventoryitemqtyreserved. For more information, see https://www.manager.io/guides?inventory-item-qty-reserved",
          "parameters": [
            {
              "name": "inventoryItem",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "InventoryItem",
                  "QtyOrdered",
                  "QtyDelivered",
                  "QtyInvoiced",
                  "QtyReserved"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "InventoryItem",
                    "QtyOrdered",
                    "QtyDelivered",
                    "QtyInvoiced",
                    "QtyReserved"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/inventory-item-qty-to-deliver": {
        "get": {
          "operationId": "GetInventoryItemQtyToDeliver",
          "summary": "InventoryItemQtyToDeliver",
          "description": "Retrieve list of inventoryitemqtytodeliver. For more information, see https://www.manager.io/guides?inventory-item-qty-to-deliver",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Customer",
                  "QtyToDeliver"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Customer",
                    "QtyToDeliver"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/inventory-item-qty-to-deliver-transactions": {
        "get": {
          "operationId": "GetInventoryItemQtyToDeliverTransactions",
          "summary": "InventoryItemQtyToDeliverTransactions",
          "description": "Retrieve list of inventoryitemqtytodelivertransactions. For more information, see https://www.manager.io/guides?inventory-item-qty-to-deliver-transactions",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Date",
                  "Transaction",
                  "Reference",
                  "InventoryItem",
                  "Customer",
                  "Description",
                  "LineDescription",
                  "QtyToDeliver"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Date",
                    "Transaction",
                    "Reference",
                    "InventoryItem",
                    "Customer",
                    "Description",
                    "LineDescription",
                    "QtyToDeliver"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/inventory-item-qty-to-receive": {
        "get": {
          "operationId": "GetInventoryItemQtyToReceive",
          "summary": "InventoryItemQtyToReceive",
          "description": "Retrieve list of inventoryitemqtytoreceive. For more information, see https://www.manager.io/guides?inventory-item-qty-to-receive",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Supplier",
                  "QtyToReceive"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Supplier",
                    "QtyToReceive"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/inventory-item-qty-to-receive-transactions": {
        "get": {
          "operationId": "GetInventoryItemQtyToReceiveTransactions",
          "summary": "InventoryItemQtyToReceiveTransactions",
          "description": "Retrieve list of inventoryitemqtytoreceivetransactions. For more information, see https://www.manager.io/guides?inventory-item-qty-to-receive-transactions",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Date",
                  "Transaction",
                  "Reference",
                  "InventoryItem",
                  "Supplier",
                  "Description",
                  "LineDescription",
                  "QtyToReceive"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Date",
                    "Transaction",
                    "Reference",
                    "InventoryItem",
                    "Supplier",
                    "Description",
                    "LineDescription",
                    "QtyToReceive"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/inventory-item-starting-balance-list": {
        "get": {
          "operationId": "GetInventoryItemStartingBalanceList",
          "summary": "InventoryItemStartingBalanceList",
          "description": "Retrieve list of inventoryitemstartingbalancelist. For more information, see https://www.manager.io/guides?inventory-item-starting-balance-list",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "InventoryItem",
                  "QtyOnHand",
                  "QtyToReceive",
                  "QtyToDeliver",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "InventoryItem",
                    "QtyOnHand",
                    "QtyToReceive",
                    "QtyToDeliver",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/inventory-quantity-by-location-list": {
        "get": {
          "operationId": "GetInventoryQuantityByLocationList",
          "summary": "InventoryQuantityByLocationList",
          "description": "Retrieve list of inventoryquantitybylocationlist. For more information, see https://www.manager.io/guides?inventory-quantity-by-location-list",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "Date",
                  "Description",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "Date",
                    "Description",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/inventory-transfer-lines": {
        "get": {
          "operationId": "GetInventoryTransferLines",
          "summary": "InventoryTransferLines",
          "description": "Retrieve list of inventorytransferlines. For more information, see https://www.manager.io/guides?inventory-transfer-lines",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Date",
                  "Reference",
                  "InventoryLocation",
                  "Description",
                  "InventoryItem",
                  "LineDescription",
                  "Qty"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Date",
                    "Reference",
                    "InventoryLocation",
                    "Description",
                    "InventoryItem",
                    "LineDescription",
                    "Qty"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/investment-market-prices": {
        "get": {
          "operationId": "GetInvestmentMarketPrices",
          "summary": "Investment Market Prices",
          "description": "Retrieve list of investment market prices. For more information, see https://www.manager.io/guides?investment-market-prices",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "Date",
                  "Investment",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "Date",
                    "Investment",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/investments": {
        "get": {
          "operationId": "GetInvestments",
          "summary": "Investments",
          "description": "Retrieve list of investments. For more information, see https://www.manager.io/guides?investments",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "Code",
                  "Name",
                  "ControlAccount",
                  "Qty",
                  "MarketValue",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "Code",
                    "Name",
                    "ControlAccount",
                    "Qty",
                    "MarketValue",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/investment-starting-balance-list": {
        "get": {
          "operationId": "GetInvestmentStartingBalanceList",
          "summary": "InvestmentStartingBalanceList",
          "description": "Retrieve list of investmentstartingbalancelist. For more information, see https://www.manager.io/guides?investment-starting-balance-list",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "Investment",
                  "QtyOwned",
                  "MarketPrice",
                  "MarketValue",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "Investment",
                    "QtyOwned",
                    "MarketPrice",
                    "MarketValue",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/investment-transactions": {
        "get": {
          "operationId": "GetInvestmentTransactions",
          "summary": "InvestmentTransactions",
          "description": "Retrieve list of investmenttransactions. For more information, see https://www.manager.io/guides?investment-transactions",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Name",
                  "BaseBalance",
                  "AccountBalance",
                  "Date",
                  "Transaction",
                  "BankOrCashAccount",
                  "ExpenseClaimPayer",
                  "Customer",
                  "Supplier",
                  "Employee",
                  "Investment",
                  "CapitalAccount",
                  "Description",
                  "Qty",
                  "Balance",
                  "Name",
                  "Qty",
                  "MarketValue",
                  "Investment",
                  "Qty",
                  "MarketValue",
                  "ClosingBalance",
                  "Date",
                  "Transaction",
                  "BankOrCashAccount",
                  "ExpenseClaimPayer",
                  "Customer",
                  "Supplier",
                  "Employee",
                  "InventoryItem",
                  "CapitalAccount",
                  "Description",
                  "Qty",
                  "Balance",
                  "Name",
                  "Qty",
                  "AverageCost",
                  "TotalCost",
                  "Name",
                  "Balance",
                  "Date",
                  "Transaction",
                  "ConversionMarkup",
                  "Debit",
                  "Credit",
                  "Account",
                  "ForeignBalance",
                  "ConvertedBalance",
                  "ClosingBalance",
                  "Date",
                  "Transaction",
                  "Account",
                  "BankOrCashAccount",
                  "ExpenseClaimPayer",
                  "Customer",
                  "Supplier",
                  "Employee",
                  "InventoryKit",
                  "InventoryItem",
                  "Investment",
                  "FixedAsset",
                  "IntangibleAsset",
                  "CapitalAccount",
                  "SpecialAccount",
                  "Description",
                  "Tax",
                  "Qty",
                  "QtyReduction",
                  "PurchaseCost",
                  "TransactionAmount",
                  "CurrencyAmount",
                  "Debit",
                  "Credit"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Name",
                    "BaseBalance",
                    "AccountBalance",
                    "Date",
                    "Transaction",
                    "BankOrCashAccount",
                    "ExpenseClaimPayer",
                    "Customer",
                    "Supplier",
                    "Employee",
                    "Investment",
                    "CapitalAccount",
                    "Description",
                    "Qty",
                    "Balance",
                    "Name",
                    "Qty",
                    "MarketValue",
                    "Investment",
                    "Qty",
                    "MarketValue",
                    "ClosingBalance",
                    "Date",
                    "Transaction",
                    "BankOrCashAccount",
                    "ExpenseClaimPayer",
                    "Customer",
                    "Supplier",
                    "Employee",
                    "InventoryItem",
                    "CapitalAccount",
                    "Description",
                    "Qty",
                    "Balance",
                    "Name",
                    "Qty",
                    "AverageCost",
                    "TotalCost",
                    "Name",
                    "Balance",
                    "Date",
                    "Transaction",
                    "ConversionMarkup",
                    "Debit",
                    "Credit",
                    "Account",
                    "ForeignBalance",
                    "ConvertedBalance",
                    "ClosingBalance",
                    "Date",
                    "Transaction",
                    "Account",
                    "BankOrCashAccount",
                    "ExpenseClaimPayer",
                    "Customer",
                    "Supplier",
                    "Employee",
                    "InventoryKit",
                    "InventoryItem",
                    "Investment",
                    "FixedAsset",
                    "IntangibleAsset",
                    "CapitalAccount",
                    "SpecialAccount",
                    "Description",
                    "Tax",
                    "Qty",
                    "QtyReduction",
                    "PurchaseCost",
                    "TransactionAmount",
                    "CurrencyAmount",
                    "Debit",
                    "Credit"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/journal-entries": {
        "get": {
          "operationId": "GetJournalEntries",
          "summary": "Journal Entries",
          "description": "Retrieve list of journal entries. For more information, see https://www.manager.io/guides?journal-entries",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "Date",
                  "Reference",
                  "Narration",
                  "Accounts",
                  "Project",
                  "Debit",
                  "Credit",
                  "Status",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "Date",
                    "Reference",
                    "Narration",
                    "Accounts",
                    "Project",
                    "Debit",
                    "Credit",
                    "Status",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/journal-entry-footers": {
        "get": {
          "operationId": "GetJournalEntryFooters",
          "summary": "JournalEntryFooters",
          "description": "Retrieve list of journalentryfooters. For more information, see https://www.manager.io/guides?journal-entry-footers",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "Name",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "Name",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/journal-entry-lines": {
        "get": {
          "operationId": "GetJournalEntryLines",
          "summary": "JournalEntryLines",
          "description": "Retrieve list of journalentrylines. For more information, see https://www.manager.io/guides?journal-entry-lines",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Date",
                  "Reference",
                  "Narration",
                  "Account",
                  "LineDescription",
                  "Qty",
                  "Project",
                  "Division",
                  "TaxCode",
                  "TaxAmount",
                  "Debit",
                  "Credit"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Date",
                    "Reference",
                    "Narration",
                    "Account",
                    "LineDescription",
                    "Qty",
                    "Project",
                    "Division",
                    "TaxCode",
                    "TaxAmount",
                    "Debit",
                    "Credit"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/late-payment-fees": {
        "get": {
          "operationId": "GetLatePaymentFees",
          "summary": "Late payment fees",
          "description": "Retrieve list of late payment fees. For more information, see https://www.manager.io/guides?late-payment-fees",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "Date",
                  "Customer",
                  "SalesInvoice",
                  "Amount",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "Date",
                    "Customer",
                    "SalesInvoice",
                    "Amount",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/multiple-value-custom-fields": {
        "get": {
          "operationId": "GetMultipleValueCustomFields",
          "summary": "Multiple Value Custom Fields",
          "description": "Retrieve list of multiple value custom fields. For more information, see https://www.manager.io/guides?multiple-value-custom-fields",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "Name",
                  "Placement",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "Name",
                    "Placement",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/new-inter-account-transfers": {
        "get": {
          "operationId": "GetNewInterAccountTransfers",
          "summary": "NewInterAccountTransfers",
          "description": "Retrieve list of newinteraccounttransfers. For more information, see https://www.manager.io/guides?new-inter-account-transfers",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "PaymentDate",
                  "PaidFrom",
                  "PaymentAmount",
                  "Divider",
                  "ReceiptDate",
                  "ReceivedIn",
                  "ReceiptAmount"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "PaymentDate",
                    "PaidFrom",
                    "PaymentAmount",
                    "Divider",
                    "ReceiptDate",
                    "ReceivedIn",
                    "ReceiptAmount"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/new-sales-invoice-form": {
        "get": {
          "operationId": "GetNewSalesInvoiceForm",
          "summary": "NewSalesInvoiceForm",
          "description": "Retrieve list of newsalesinvoiceform. For more information, see https://www.manager.io/guides?new-sales-invoice-form",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Date",
                  "Description",
                  "Amount",
                  "Status"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Date",
                    "Description",
                    "Amount",
                    "Status"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/non-inventory-items": {
        "get": {
          "operationId": "GetNonInventoryItems",
          "summary": "Non-inventory Items",
          "description": "Retrieve list of non-inventory items. For more information, see https://www.manager.io/guides?non-inventory-items",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "ItemCode",
                  "ItemName",
                  "Description",
                  "UnitName",
                  "PurchasePrice",
                  "SalePrice",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "ItemCode",
                    "ItemName",
                    "Description",
                    "UnitName",
                    "PurchasePrice",
                    "SalePrice",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/number-custom-fields": {
        "get": {
          "operationId": "GetNumberCustomFields",
          "summary": "Number Custom Fields",
          "description": "Retrieve list of number custom fields. For more information, see https://www.manager.io/guides?number-custom-fields",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "Name",
                  "Placement",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "Name",
                    "Placement",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/payment-rules": {
        "get": {
          "operationId": "GetPaymentRules",
          "summary": "Payment Rules",
          "description": "Retrieve list of payment rules. For more information, see https://www.manager.io/guides?payment-rules",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "IfBankAccountIs",
                  "AndDescriptionContains",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "IfBankAccountIs",
                    "AndDescriptionContains",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/payment-footers": {
        "get": {
          "operationId": "GetPaymentFooters",
          "summary": "PaymentFooters",
          "description": "Retrieve list of paymentfooters. For more information, see https://www.manager.io/guides?payment-footers",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "Name",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "Name",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/payment-lines": {
        "get": {
          "operationId": "GetPaymentLines",
          "summary": "PaymentLines",
          "description": "Retrieve list of paymentlines. For more information, see https://www.manager.io/guides?payment-lines",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Date",
                  "Reference",
                  "BankOrCashAccount",
                  "Customer",
                  "Supplier",
                  "Description",
                  "Item",
                  "Account",
                  "LineDescription",
                  "Qty",
                  "UnitPrice",
                  "Project",
                  "Division",
                  "TaxCode",
                  "TaxAmount",
                  "Amount"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Date",
                    "Reference",
                    "BankOrCashAccount",
                    "Customer",
                    "Supplier",
                    "Description",
                    "Item",
                    "Account",
                    "LineDescription",
                    "Qty",
                    "UnitPrice",
                    "Project",
                    "Division",
                    "TaxCode",
                    "TaxAmount",
                    "Amount"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/payments": {
        "get": {
          "operationId": "GetPayments",
          "summary": "Payments",
          "description": "Retrieve list of payments. For more information, see https://www.manager.io/guides?payments",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "Date",
                  "Cleared",
                  "Reference",
                  "PaidFrom",
                  "Description",
                  "Payee",
                  "Accounts",
                  "Project",
                  "Amount",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "Date",
                    "Cleared",
                    "Reference",
                    "PaidFrom",
                    "Description",
                    "Payee",
                    "Accounts",
                    "Project",
                    "Amount",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/payslip-footers": {
        "get": {
          "operationId": "GetPayslipFooters",
          "summary": "PayslipFooters",
          "description": "Retrieve list of payslipfooters. For more information, see https://www.manager.io/guides?payslip-footers",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "Name",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "Name",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/payslips": {
        "get": {
          "operationId": "GetPayslips",
          "summary": "Payslips",
          "description": "Retrieve list of payslips. For more information, see https://www.manager.io/guides?payslips",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "Date",
                  "Reference",
                  "Employee",
                  "Description",
                  "GrossPay",
                  "Deduction",
                  "NetPay",
                  "Contribution",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "Date",
                    "Reference",
                    "Employee",
                    "Description",
                    "GrossPay",
                    "Deduction",
                    "NetPay",
                    "Contribution",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/pending-early-payment-discounts": {
        "get": {
          "operationId": "GetPendingEarlyPaymentDiscounts",
          "summary": "PendingEarlyPaymentDiscounts",
          "description": "Retrieve list of pendingearlypaymentdiscounts. For more information, see https://www.manager.io/guides?pending-early-payment-discounts",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Customer",
                  "SalesInvoice",
                  "BalanceDue",
                  "EarlyPaymentDiscount"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Customer",
                    "SalesInvoice",
                    "BalanceDue",
                    "EarlyPaymentDiscount"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/pending-inter-account-transfers": {
        "get": {
          "operationId": "GetPendingInterAccountTransfers",
          "summary": "PendingInterAccountTransfers",
          "description": "Retrieve list of pendinginteraccounttransfers. For more information, see https://www.manager.io/guides?pending-inter-account-transfers",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "NextIssueDate",
                  "PaidFrom",
                  "ReceivedIn",
                  "Description",
                  "Amount",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "NextIssueDate",
                    "PaidFrom",
                    "ReceivedIn",
                    "Description",
                    "Amount",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/pending-late-payment-fees": {
        "get": {
          "operationId": "GetPendingLatePaymentFees",
          "summary": "PendingLatePaymentFees",
          "description": "Retrieve list of pendinglatepaymentfees. For more information, see https://www.manager.io/guides?pending-late-payment-fees",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Date",
                  "Customer",
                  "SalesInvoice",
                  "BalanceDue",
                  "NewLatePaymentFee"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Date",
                    "Customer",
                    "SalesInvoice",
                    "BalanceDue",
                    "NewLatePaymentFee"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/pending-payments": {
        "get": {
          "operationId": "GetPendingPayments",
          "summary": "PendingPayments",
          "description": "Retrieve list of pendingpayments. For more information, see https://www.manager.io/guides?pending-payments",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "NextIssueDate",
                  "Account",
                  "Description",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "NextIssueDate",
                    "Account",
                    "Description",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/pending-purchase-orders": {
        "get": {
          "operationId": "GetPendingPurchaseOrders",
          "summary": "PendingPurchaseOrders",
          "description": "Retrieve list of pendingpurchaseorders. For more information, see https://www.manager.io/guides?pending-purchase-orders",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "NextIssueDate",
                  "Supplier",
                  "Description",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "NextIssueDate",
                    "Supplier",
                    "Description",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/pending-receipts": {
        "get": {
          "operationId": "GetPendingReceipts",
          "summary": "PendingReceipts",
          "description": "Retrieve list of pendingreceipts. For more information, see https://www.manager.io/guides?pending-receipts",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "NextIssueDate",
                  "Account",
                  "Description",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "NextIssueDate",
                    "Account",
                    "Description",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/pending-recurring-journal-entries": {
        "get": {
          "operationId": "GetPendingRecurringJournalEntries",
          "summary": "PendingRecurringJournalEntries",
          "description": "Retrieve list of pendingrecurringjournalentries. For more information, see https://www.manager.io/guides?pending-recurring-journal-entries",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "NextIssueDate",
                  "Narration",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "NextIssueDate",
                    "Narration",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/pending-recurring-payslips": {
        "get": {
          "operationId": "GetPendingRecurringPayslips",
          "summary": "PendingRecurringPayslips",
          "description": "Retrieve list of pendingrecurringpayslips. For more information, see https://www.manager.io/guides?pending-recurring-payslips",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "NextIssueDate",
                  "Employee",
                  "Description",
                  "GrossPay",
                  "Deduction",
                  "NetPay",
                  "Contribution",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "NextIssueDate",
                    "Employee",
                    "Description",
                    "GrossPay",
                    "Deduction",
                    "NetPay",
                    "Contribution",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/pending-recurring-purchase-invoices": {
        "get": {
          "operationId": "GetPendingRecurringPurchaseInvoices",
          "summary": "PendingRecurringPurchaseInvoices",
          "description": "Retrieve list of pendingrecurringpurchaseinvoices. For more information, see https://www.manager.io/guides?pending-recurring-purchase-invoices",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "NextIssueDate",
                  "Supplier",
                  "Description",
                  "Amount",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "NextIssueDate",
                    "Supplier",
                    "Description",
                    "Amount",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/pending-recurring-sales-invoices": {
        "get": {
          "operationId": "GetPendingRecurringSalesInvoices",
          "summary": "PendingRecurringSalesInvoices",
          "description": "Retrieve list of pendingrecurringsalesinvoices. For more information, see https://www.manager.io/guides?pending-recurring-sales-invoices",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "NextIssueDate",
                  "Customer",
                  "Description",
                  "Amount",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "NextIssueDate",
                    "Customer",
                    "Description",
                    "Amount",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/pending-sales-orders": {
        "get": {
          "operationId": "GetPendingSalesOrders",
          "summary": "PendingSalesOrders",
          "description": "Retrieve list of pendingsalesorders. For more information, see https://www.manager.io/guides?pending-sales-orders",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "NextIssueDate",
                  "Customer",
                  "Description",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "NextIssueDate",
                    "Customer",
                    "Description",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/pending-sales-quotes": {
        "get": {
          "operationId": "GetPendingSalesQuotes",
          "summary": "PendingSalesQuotes",
          "description": "Retrieve list of pendingsalesquotes. For more information, see https://www.manager.io/guides?pending-sales-quotes",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "NextIssueDate",
                  "Customer",
                  "Description",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "NextIssueDate",
                    "Customer",
                    "Description",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/production-orders": {
        "get": {
          "operationId": "GetProductionOrders",
          "summary": "Production Orders",
          "description": "Retrieve list of production orders. For more information, see https://www.manager.io/guides?production-orders",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "Date",
                  "Reference",
                  "Description",
                  "InventoryLocation",
                  "FinishedInventoryItem",
                  "Qty",
                  "Status",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "Date",
                    "Reference",
                    "Description",
                    "InventoryLocation",
                    "FinishedInventoryItem",
                    "Qty",
                    "Status",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/profit-and-loss-statement-actual-vs-budget-transactions": {
        "get": {
          "operationId": "GetProfitAndLossStatementActualVsBudgetTransactions",
          "summary": "ProfitAndLossStatementActualVsBudgetTransactions",
          "description": "Retrieve list of profitandlossstatementactualvsbudgettransactions. For more information, see https://www.manager.io/guides?profit-and-loss-statement-actual-vs-budget-transactions",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Name",
                  "BaseBalance",
                  "AccountBalance",
                  "Date",
                  "Transaction",
                  "BankOrCashAccount",
                  "ExpenseClaimPayer",
                  "Customer",
                  "Supplier",
                  "Employee",
                  "Investment",
                  "CapitalAccount",
                  "Description",
                  "Qty",
                  "Balance",
                  "Name",
                  "Qty",
                  "MarketValue",
                  "Investment",
                  "Qty",
                  "MarketValue",
                  "ClosingBalance",
                  "Date",
                  "Transaction",
                  "BankOrCashAccount",
                  "ExpenseClaimPayer",
                  "Customer",
                  "Supplier",
                  "Employee",
                  "InventoryItem",
                  "CapitalAccount",
                  "Description",
                  "Qty",
                  "Balance",
                  "Name",
                  "Qty",
                  "AverageCost",
                  "TotalCost",
                  "Name",
                  "Balance",
                  "Date",
                  "Transaction",
                  "ConversionMarkup",
                  "Debit",
                  "Credit",
                  "Account",
                  "ForeignBalance",
                  "ConvertedBalance",
                  "ClosingBalance",
                  "Date",
                  "Transaction",
                  "Account",
                  "BankOrCashAccount",
                  "ExpenseClaimPayer",
                  "Customer",
                  "Supplier",
                  "Employee",
                  "InventoryKit",
                  "InventoryItem",
                  "Investment",
                  "FixedAsset",
                  "IntangibleAsset",
                  "CapitalAccount",
                  "SpecialAccount",
                  "Description",
                  "Tax",
                  "Qty",
                  "QtyReduction",
                  "PurchaseCost",
                  "TransactionAmount",
                  "CurrencyAmount",
                  "Debit",
                  "Credit"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Name",
                    "BaseBalance",
                    "AccountBalance",
                    "Date",
                    "Transaction",
                    "BankOrCashAccount",
                    "ExpenseClaimPayer",
                    "Customer",
                    "Supplier",
                    "Employee",
                    "Investment",
                    "CapitalAccount",
                    "Description",
                    "Qty",
                    "Balance",
                    "Name",
                    "Qty",
                    "MarketValue",
                    "Investment",
                    "Qty",
                    "MarketValue",
                    "ClosingBalance",
                    "Date",
                    "Transaction",
                    "BankOrCashAccount",
                    "ExpenseClaimPayer",
                    "Customer",
                    "Supplier",
                    "Employee",
                    "InventoryItem",
                    "CapitalAccount",
                    "Description",
                    "Qty",
                    "Balance",
                    "Name",
                    "Qty",
                    "AverageCost",
                    "TotalCost",
                    "Name",
                    "Balance",
                    "Date",
                    "Transaction",
                    "ConversionMarkup",
                    "Debit",
                    "Credit",
                    "Account",
                    "ForeignBalance",
                    "ConvertedBalance",
                    "ClosingBalance",
                    "Date",
                    "Transaction",
                    "Account",
                    "BankOrCashAccount",
                    "ExpenseClaimPayer",
                    "Customer",
                    "Supplier",
                    "Employee",
                    "InventoryKit",
                    "InventoryItem",
                    "Investment",
                    "FixedAsset",
                    "IntangibleAsset",
                    "CapitalAccount",
                    "SpecialAccount",
                    "Description",
                    "Tax",
                    "Qty",
                    "QtyReduction",
                    "PurchaseCost",
                    "TransactionAmount",
                    "CurrencyAmount",
                    "Debit",
                    "Credit"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/profit-and-loss-statement-transactions": {
        "get": {
          "operationId": "GetProfitAndLossStatementTransactions",
          "summary": "ProfitAndLossStatementTransactions",
          "description": "Retrieve list of profitandlossstatementtransactions. For more information, see https://www.manager.io/guides?profit-and-loss-statement-transactions",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Name",
                  "BaseBalance",
                  "AccountBalance",
                  "Date",
                  "Transaction",
                  "BankOrCashAccount",
                  "ExpenseClaimPayer",
                  "Customer",
                  "Supplier",
                  "Employee",
                  "Investment",
                  "CapitalAccount",
                  "Description",
                  "Qty",
                  "Balance",
                  "Name",
                  "Qty",
                  "MarketValue",
                  "Investment",
                  "Qty",
                  "MarketValue",
                  "ClosingBalance",
                  "Date",
                  "Transaction",
                  "BankOrCashAccount",
                  "ExpenseClaimPayer",
                  "Customer",
                  "Supplier",
                  "Employee",
                  "InventoryItem",
                  "CapitalAccount",
                  "Description",
                  "Qty",
                  "Balance",
                  "Name",
                  "Qty",
                  "AverageCost",
                  "TotalCost",
                  "Name",
                  "Balance",
                  "Date",
                  "Transaction",
                  "ConversionMarkup",
                  "Debit",
                  "Credit",
                  "Account",
                  "ForeignBalance",
                  "ConvertedBalance",
                  "ClosingBalance",
                  "Date",
                  "Transaction",
                  "Account",
                  "BankOrCashAccount",
                  "ExpenseClaimPayer",
                  "Customer",
                  "Supplier",
                  "Employee",
                  "InventoryKit",
                  "InventoryItem",
                  "Investment",
                  "FixedAsset",
                  "IntangibleAsset",
                  "CapitalAccount",
                  "SpecialAccount",
                  "Description",
                  "Tax",
                  "Qty",
                  "QtyReduction",
                  "PurchaseCost",
                  "TransactionAmount",
                  "CurrencyAmount",
                  "Debit",
                  "Credit"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Name",
                    "BaseBalance",
                    "AccountBalance",
                    "Date",
                    "Transaction",
                    "BankOrCashAccount",
                    "ExpenseClaimPayer",
                    "Customer",
                    "Supplier",
                    "Employee",
                    "Investment",
                    "CapitalAccount",
                    "Description",
                    "Qty",
                    "Balance",
                    "Name",
                    "Qty",
                    "MarketValue",
                    "Investment",
                    "Qty",
                    "MarketValue",
                    "ClosingBalance",
                    "Date",
                    "Transaction",
                    "BankOrCashAccount",
                    "ExpenseClaimPayer",
                    "Customer",
                    "Supplier",
                    "Employee",
                    "InventoryItem",
                    "CapitalAccount",
                    "Description",
                    "Qty",
                    "Balance",
                    "Name",
                    "Qty",
                    "AverageCost",
                    "TotalCost",
                    "Name",
                    "Balance",
                    "Date",
                    "Transaction",
                    "ConversionMarkup",
                    "Debit",
                    "Credit",
                    "Account",
                    "ForeignBalance",
                    "ConvertedBalance",
                    "ClosingBalance",
                    "Date",
                    "Transaction",
                    "Account",
                    "BankOrCashAccount",
                    "ExpenseClaimPayer",
                    "Customer",
                    "Supplier",
                    "Employee",
                    "InventoryKit",
                    "InventoryItem",
                    "Investment",
                    "FixedAsset",
                    "IntangibleAsset",
                    "CapitalAccount",
                    "SpecialAccount",
                    "Description",
                    "Tax",
                    "Qty",
                    "QtyReduction",
                    "PurchaseCost",
                    "TransactionAmount",
                    "CurrencyAmount",
                    "Debit",
                    "Credit"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/project-purchase-orders": {
        "get": {
          "operationId": "GetProjectPurchaseOrders",
          "summary": "ProjectPurchaseOrders",
          "description": "Retrieve list of projectpurchaseorders. For more information, see https://www.manager.io/guides?project-purchase-orders",
          "parameters": [
            {
              "name": "project",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Date",
                  "PurchaseOrder",
                  "Supplier",
                  "Project",
                  "OrderAmount",
                  "InvoiceAmount",
                  "Uninvoiced"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Date",
                    "PurchaseOrder",
                    "Supplier",
                    "Project",
                    "OrderAmount",
                    "InvoiceAmount",
                    "Uninvoiced"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/projects": {
        "get": {
          "operationId": "GetProjects",
          "summary": "Projects",
          "description": "Retrieve list of projects. For more information, see https://www.manager.io/guides?projects",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "Name",
                  "Income",
                  "Expenses",
                  "Profit",
                  "PurchaseOrders",
                  "RevisedProfit",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "Name",
                    "Income",
                    "Expenses",
                    "Profit",
                    "PurchaseOrders",
                    "RevisedProfit",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/purchase-invoices": {
        "get": {
          "operationId": "GetPurchaseInvoices",
          "summary": "Purchase Invoices",
          "description": "Retrieve list of purchase invoices. For more information, see https://www.manager.io/guides?purchase-invoices",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "IssueDate",
                  "DueDate",
                  "Reference",
                  "PurchaseOrder",
                  "Supplier",
                  "Description",
                  "Project",
                  "ClosedInvoice",
                  "WithholdingTax",
                  "Discount",
                  "InvoiceAmount",
                  "BalanceDue",
                  "DaysToDueDate",
                  "DaysOverdue",
                  "Status",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "IssueDate",
                    "DueDate",
                    "Reference",
                    "PurchaseOrder",
                    "Supplier",
                    "Description",
                    "Project",
                    "ClosedInvoice",
                    "WithholdingTax",
                    "Discount",
                    "InvoiceAmount",
                    "BalanceDue",
                    "DaysToDueDate",
                    "DaysOverdue",
                    "Status",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/purchase-orders": {
        "get": {
          "operationId": "GetPurchaseOrders",
          "summary": "Purchase Orders",
          "description": "Retrieve list of purchase orders. For more information, see https://www.manager.io/guides?purchase-orders",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "Date",
                  "Reference",
                  "Supplier",
                  "PurchaseQuote",
                  "Description",
                  "OrderAmount",
                  "QtyOnOrder",
                  "DeliveryStatus",
                  "InvoiceAmount",
                  "InvoiceStatus",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "Date",
                    "Reference",
                    "Supplier",
                    "PurchaseQuote",
                    "Description",
                    "OrderAmount",
                    "QtyOnOrder",
                    "DeliveryStatus",
                    "InvoiceAmount",
                    "InvoiceStatus",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/purchase-quotes": {
        "get": {
          "operationId": "GetPurchaseQuotes",
          "summary": "Purchase Quotes",
          "description": "Retrieve list of purchase quotes. For more information, see https://www.manager.io/guides?purchase-quotes",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "Date",
                  "Reference",
                  "Supplier",
                  "Description",
                  "Amount",
                  "Status",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "Date",
                    "Reference",
                    "Supplier",
                    "Description",
                    "Amount",
                    "Status",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/purchase-invoice-footers": {
        "get": {
          "operationId": "GetPurchaseInvoiceFooters",
          "summary": "PurchaseInvoiceFooters",
          "description": "Retrieve list of purchaseinvoicefooters. For more information, see https://www.manager.io/guides?purchase-invoice-footers",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "Name",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "Name",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/purchase-invoice-lines": {
        "get": {
          "operationId": "GetPurchaseInvoiceLines",
          "summary": "PurchaseInvoiceLines",
          "description": "Retrieve list of purchaseinvoicelines. For more information, see https://www.manager.io/guides?purchase-invoice-lines",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "IssueDate",
                  "DueDate",
                  "Reference",
                  "Supplier",
                  "Description",
                  "Item",
                  "Account",
                  "LineDescription",
                  "Qty",
                  "UnitPrice",
                  "Discount",
                  "Project",
                  "Division",
                  "TaxCode",
                  "TaxAmount",
                  "Amount"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "IssueDate",
                    "DueDate",
                    "Reference",
                    "Supplier",
                    "Description",
                    "Item",
                    "Account",
                    "LineDescription",
                    "Qty",
                    "UnitPrice",
                    "Discount",
                    "Project",
                    "Division",
                    "TaxCode",
                    "TaxAmount",
                    "Amount"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/purchase-invoice-starting-balance-list": {
        "get": {
          "operationId": "GetPurchaseInvoiceStartingBalanceList",
          "summary": "PurchaseInvoiceStartingBalanceList",
          "description": "Retrieve list of purchaseinvoicestartingbalancelist. For more information, see https://www.manager.io/guides?purchase-invoice-starting-balance-list",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "Supplier",
                  "PurchaseInvoice",
                  "PartialPayment",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "Supplier",
                    "PurchaseInvoice",
                    "PartialPayment",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/purchase-order-footers": {
        "get": {
          "operationId": "GetPurchaseOrderFooters",
          "summary": "PurchaseOrderFooters",
          "description": "Retrieve list of purchaseorderfooters. For more information, see https://www.manager.io/guides?purchase-order-footers",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "Name",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "Name",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/purchase-order-lines": {
        "get": {
          "operationId": "GetPurchaseOrderLines",
          "summary": "PurchaseOrderLines",
          "description": "Retrieve list of purchaseorderlines. For more information, see https://www.manager.io/guides?purchase-order-lines",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Date",
                  "Reference",
                  "Supplier",
                  "Description",
                  "Item",
                  "LineDescription",
                  "Qty",
                  "UnitPrice",
                  "Project",
                  "Division",
                  "TaxCode",
                  "TaxAmount",
                  "Amount"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Date",
                    "Reference",
                    "Supplier",
                    "Description",
                    "Item",
                    "LineDescription",
                    "Qty",
                    "UnitPrice",
                    "Project",
                    "Division",
                    "TaxCode",
                    "TaxAmount",
                    "Amount"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/purchase-order-qty-delivered-transactions": {
        "get": {
          "operationId": "GetPurchaseOrderQtyDeliveredTransactions",
          "summary": "PurchaseOrderQtyDeliveredTransactions",
          "description": "Retrieve list of purchaseorderqtydeliveredtransactions. For more information, see https://www.manager.io/guides?purchase-order-qty-delivered-transactions",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Date",
                  "Transaction",
                  "Reference",
                  "InventoryItem",
                  "Supplier",
                  "Description",
                  "LineDescription",
                  "QtyReceived"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Date",
                    "Transaction",
                    "Reference",
                    "InventoryItem",
                    "Supplier",
                    "Description",
                    "LineDescription",
                    "QtyReceived"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/purchase-order-qty-invoiced-transactions": {
        "get": {
          "operationId": "GetPurchaseOrderQtyInvoicedTransactions",
          "summary": "PurchaseOrderQtyInvoicedTransactions",
          "description": "Retrieve list of purchaseorderqtyinvoicedtransactions. For more information, see https://www.manager.io/guides?purchase-order-qty-invoiced-transactions",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Date",
                  "Transaction",
                  "Reference",
                  "InventoryItem",
                  "Supplier",
                  "Description",
                  "LineDescription",
                  "QtyInvoiced"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Date",
                    "Transaction",
                    "Reference",
                    "InventoryItem",
                    "Supplier",
                    "Description",
                    "LineDescription",
                    "QtyInvoiced"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/purchase-order-qty-on-order": {
        "get": {
          "operationId": "GetPurchaseOrderQtyOnOrder",
          "summary": "PurchaseOrderQtyOnOrder",
          "description": "Retrieve list of purchaseorderqtyonorder. For more information, see https://www.manager.io/guides?purchase-order-qty-on-order",
          "parameters": [
            {
              "name": "purchaseOrder",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "InventoryItem",
                  "QtyOrdered",
                  "QtyReceived",
                  "QtyInvoiced",
                  "QtyReserved"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "InventoryItem",
                    "QtyOrdered",
                    "QtyReceived",
                    "QtyInvoiced",
                    "QtyReserved"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/purchase-quote-footers": {
        "get": {
          "operationId": "GetPurchaseQuoteFooters",
          "summary": "PurchaseQuoteFooters",
          "description": "Retrieve list of purchasequotefooters. For more information, see https://www.manager.io/guides?purchase-quote-footers",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "Name",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "Name",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/purchase-quote-lines": {
        "get": {
          "operationId": "GetPurchaseQuoteLines",
          "summary": "PurchaseQuoteLines",
          "description": "Retrieve list of purchasequotelines. For more information, see https://www.manager.io/guides?purchase-quote-lines",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Date",
                  "Reference",
                  "Supplier",
                  "Description",
                  "Item",
                  "LineDescription",
                  "Qty",
                  "UnitPrice",
                  "Project",
                  "Division",
                  "TaxCode",
                  "TaxAmount",
                  "Amount"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Date",
                    "Reference",
                    "Supplier",
                    "Description",
                    "Item",
                    "LineDescription",
                    "Qty",
                    "UnitPrice",
                    "Project",
                    "Division",
                    "TaxCode",
                    "TaxAmount",
                    "Amount"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/realized-investment-gains-summary-list": {
        "get": {
          "operationId": "GetRealizedInvestmentGainsSummaryList",
          "summary": "RealizedInvestmentGainsSummaryList",
          "description": "Retrieve list of realizedinvestmentgainssummarylist. For more information, see https://www.manager.io/guides?realized-investment-gains-summary-list",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "FromDate",
                  "ToDate",
                  "Description",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "FromDate",
                    "ToDate",
                    "Description",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/recalculate-average-cost": {
        "get": {
          "operationId": "GetRecalculateAverageCost",
          "summary": "RecalculateAverageCost",
          "description": "Retrieve list of recalculateaveragecost. For more information, see https://www.manager.io/guides?recalculate-average-cost",
          "parameters": [
            {
              "name": "date",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "InventoryItem",
                  "QtyOwned"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "InventoryItem",
                    "QtyOwned"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/receipt-rules": {
        "get": {
          "operationId": "GetReceiptRules",
          "summary": "Receipt Rules",
          "description": "Retrieve list of receipt rules. For more information, see https://www.manager.io/guides?receipt-rules",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "IfBankAccountIs",
                  "AndDescriptionContains",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "IfBankAccountIs",
                    "AndDescriptionContains",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/receipt-footers": {
        "get": {
          "operationId": "GetReceiptFooters",
          "summary": "ReceiptFooters",
          "description": "Retrieve list of receiptfooters. For more information, see https://www.manager.io/guides?receipt-footers",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "Name",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "Name",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/receipt-lines": {
        "get": {
          "operationId": "GetReceiptLines",
          "summary": "ReceiptLines",
          "description": "Retrieve list of receiptlines. For more information, see https://www.manager.io/guides?receipt-lines",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Date",
                  "Reference",
                  "BankOrCashAccount",
                  "Customer",
                  "Supplier",
                  "Description",
                  "Item",
                  "Account",
                  "LineDescription",
                  "Qty",
                  "UnitPrice",
                  "Project",
                  "Division",
                  "TaxCode",
                  "TaxAmount",
                  "Amount"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Date",
                    "Reference",
                    "BankOrCashAccount",
                    "Customer",
                    "Supplier",
                    "Description",
                    "Item",
                    "Account",
                    "LineDescription",
                    "Qty",
                    "UnitPrice",
                    "Project",
                    "Division",
                    "TaxCode",
                    "TaxAmount",
                    "Amount"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/receipts": {
        "get": {
          "operationId": "GetReceipts",
          "summary": "Receipts",
          "description": "Retrieve list of receipts. For more information, see https://www.manager.io/guides?receipts",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "Date",
                  "Cleared",
                  "Reference",
                  "ReceivedIn",
                  "Description",
                  "PaidBy",
                  "Accounts",
                  "Project",
                  "Amount",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "Date",
                    "Cleared",
                    "Reference",
                    "ReceivedIn",
                    "Description",
                    "PaidBy",
                    "Accounts",
                    "Project",
                    "Amount",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/recurring-inter-account-transfers": {
        "get": {
          "operationId": "GetRecurringInterAccountTransfers",
          "summary": "Recurring Inter Account Transfers",
          "description": "Retrieve list of recurring inter account transfers. For more information, see https://www.manager.io/guides?recurring-inter-account-transfers",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "NextIssueDate",
                  "PaidFrom",
                  "ReceivedIn",
                  "Description",
                  "Amount",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "NextIssueDate",
                    "PaidFrom",
                    "ReceivedIn",
                    "Description",
                    "Amount",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/recurring-journal-entries": {
        "get": {
          "operationId": "GetRecurringJournalEntries",
          "summary": "Recurring Journal Entries",
          "description": "Retrieve list of recurring journal entries. For more information, see https://www.manager.io/guides?recurring-journal-entries",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "NextIssueDate",
                  "Narration",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "NextIssueDate",
                    "Narration",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/recurring-payments": {
        "get": {
          "operationId": "GetRecurringPayments",
          "summary": "Recurring Payments",
          "description": "Retrieve list of recurring payments. For more information, see https://www.manager.io/guides?recurring-payments",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "NextIssueDate",
                  "Account",
                  "Description",
                  "Amount",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "NextIssueDate",
                    "Account",
                    "Description",
                    "Amount",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/recurring-payslips": {
        "get": {
          "operationId": "GetRecurringPayslips",
          "summary": "Recurring Payslips",
          "description": "Retrieve list of recurring payslips. For more information, see https://www.manager.io/guides?recurring-payslips",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "NextIssueDate",
                  "Employee",
                  "Description",
                  "GrossPay",
                  "Deduction",
                  "NetPay",
                  "Contribution",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "NextIssueDate",
                    "Employee",
                    "Description",
                    "GrossPay",
                    "Deduction",
                    "NetPay",
                    "Contribution",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/recurring-purchase-invoices": {
        "get": {
          "operationId": "GetRecurringPurchaseInvoices",
          "summary": "Recurring Purchase Invoices",
          "description": "Retrieve list of recurring purchase invoices. For more information, see https://www.manager.io/guides?recurring-purchase-invoices",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "NextIssueDate",
                  "Supplier",
                  "Description",
                  "Amount",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "NextIssueDate",
                    "Supplier",
                    "Description",
                    "Amount",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/recurring-purchase-orders": {
        "get": {
          "operationId": "GetRecurringPurchaseOrders",
          "summary": "Recurring Purchase Orders",
          "description": "Retrieve list of recurring purchase orders. For more information, see https://www.manager.io/guides?recurring-purchase-orders",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "NextIssueDate",
                  "Supplier",
                  "Description",
                  "Amount",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "NextIssueDate",
                    "Supplier",
                    "Description",
                    "Amount",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/recurring-receipts": {
        "get": {
          "operationId": "GetRecurringReceipts",
          "summary": "Recurring Receipts",
          "description": "Retrieve list of recurring receipts. For more information, see https://www.manager.io/guides?recurring-receipts",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "NextIssueDate",
                  "Account",
                  "Description",
                  "Amount",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "NextIssueDate",
                    "Account",
                    "Description",
                    "Amount",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/recurring-sales-invoices": {
        "get": {
          "operationId": "GetRecurringSalesInvoices",
          "summary": "Recurring Sales Invoices",
          "description": "Retrieve list of recurring sales invoices. For more information, see https://www.manager.io/guides?recurring-sales-invoices",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "NextIssueDate",
                  "Customer",
                  "Description",
                  "Amount",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "NextIssueDate",
                    "Customer",
                    "Description",
                    "Amount",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/recurring-sales-orders": {
        "get": {
          "operationId": "GetRecurringSalesOrders",
          "summary": "Recurring Sales Orders",
          "description": "Retrieve list of recurring sales orders. For more information, see https://www.manager.io/guides?recurring-sales-orders",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "NextIssueDate",
                  "Customer",
                  "Description",
                  "Amount",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "NextIssueDate",
                    "Customer",
                    "Description",
                    "Amount",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/recurring-sales-quotes": {
        "get": {
          "operationId": "GetRecurringSalesQuotes",
          "summary": "Recurring Sales Quotes",
          "description": "Retrieve list of recurring sales quotes. For more information, see https://www.manager.io/guides?recurring-sales-quotes",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "NextIssueDate",
                  "Customer",
                  "Description",
                  "Amount",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "NextIssueDate",
                    "Customer",
                    "Description",
                    "Amount",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/sales-invoices": {
        "get": {
          "operationId": "GetSalesInvoices",
          "summary": "Sales Invoices",
          "description": "Retrieve list of sales invoices. For more information, see https://www.manager.io/guides?sales-invoices",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "IssueDate",
                  "DueDate",
                  "Reference",
                  "SalesQuote",
                  "SalesOrder",
                  "Customer",
                  "Description",
                  "Project",
                  "Division",
                  "ClosedInvoice",
                  "WithholdingTax",
                  "Discount",
                  "InvoiceAmount",
                  "BalanceDue",
                  "DaysToDueDate",
                  "DaysOverdue",
                  "Status",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "IssueDate",
                    "DueDate",
                    "Reference",
                    "SalesQuote",
                    "SalesOrder",
                    "Customer",
                    "Description",
                    "Project",
                    "Division",
                    "ClosedInvoice",
                    "WithholdingTax",
                    "Discount",
                    "InvoiceAmount",
                    "BalanceDue",
                    "DaysToDueDate",
                    "DaysOverdue",
                    "Status",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/sales-orders": {
        "get": {
          "operationId": "GetSalesOrders",
          "summary": "Sales Orders",
          "description": "Retrieve list of sales orders. For more information, see https://www.manager.io/guides?sales-orders",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "Date",
                  "Reference",
                  "Customer",
                  "SalesQuote",
                  "Description",
                  "QtyReserved",
                  "OrderAmount",
                  "InvoiceAmount",
                  "InvoiceStatus",
                  "DeliveryStatus",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "Date",
                    "Reference",
                    "Customer",
                    "SalesQuote",
                    "Description",
                    "QtyReserved",
                    "OrderAmount",
                    "InvoiceAmount",
                    "InvoiceStatus",
                    "DeliveryStatus",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/sales-quotes": {
        "get": {
          "operationId": "GetSalesQuotes",
          "summary": "Sales Quotes",
          "description": "Retrieve list of sales quotes. For more information, see https://www.manager.io/guides?sales-quotes",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "IssueDate",
                  "ExpiryDate",
                  "Reference",
                  "Customer",
                  "Description",
                  "Amount",
                  "Status",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "IssueDate",
                    "ExpiryDate",
                    "Reference",
                    "Customer",
                    "Description",
                    "Amount",
                    "Status",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/sales-invoice-footers": {
        "get": {
          "operationId": "GetSalesInvoiceFooters",
          "summary": "SalesInvoiceFooters",
          "description": "Retrieve list of salesinvoicefooters. For more information, see https://www.manager.io/guides?sales-invoice-footers",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "Name",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "Name",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/sales-invoice-lines": {
        "get": {
          "operationId": "GetSalesInvoiceLines",
          "summary": "SalesInvoiceLines",
          "description": "Retrieve list of salesinvoicelines. For more information, see https://www.manager.io/guides?sales-invoice-lines",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "IssueDate",
                  "DueDate",
                  "Reference",
                  "Customer",
                  "Description",
                  "Item",
                  "Account",
                  "LineDescription",
                  "Qty",
                  "UnitPrice",
                  "Project",
                  "Division",
                  "TaxCode",
                  "Discount",
                  "TaxAmount",
                  "Amount"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "IssueDate",
                    "DueDate",
                    "Reference",
                    "Customer",
                    "Description",
                    "Item",
                    "Account",
                    "LineDescription",
                    "Qty",
                    "UnitPrice",
                    "Project",
                    "Division",
                    "TaxCode",
                    "Discount",
                    "TaxAmount",
                    "Amount"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/sales-invoice-starting-balance-list": {
        "get": {
          "operationId": "GetSalesInvoiceStartingBalanceList",
          "summary": "SalesInvoiceStartingBalanceList",
          "description": "Retrieve list of salesinvoicestartingbalancelist. For more information, see https://www.manager.io/guides?sales-invoice-starting-balance-list",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "Customer",
                  "SalesInvoice",
                  "PartialPayment",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "Customer",
                    "SalesInvoice",
                    "PartialPayment",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/sales-order-footers": {
        "get": {
          "operationId": "GetSalesOrderFooters",
          "summary": "SalesOrderFooters",
          "description": "Retrieve list of salesorderfooters. For more information, see https://www.manager.io/guides?sales-order-footers",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "Name",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "Name",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/sales-order-lines": {
        "get": {
          "operationId": "GetSalesOrderLines",
          "summary": "SalesOrderLines",
          "description": "Retrieve list of salesorderlines. For more information, see https://www.manager.io/guides?sales-order-lines",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Date",
                  "Reference",
                  "Customer",
                  "Description",
                  "Item",
                  "LineDescription",
                  "Qty",
                  "UnitPrice",
                  "Project",
                  "Division",
                  "TaxCode",
                  "TaxAmount",
                  "Amount"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Date",
                    "Reference",
                    "Customer",
                    "Description",
                    "Item",
                    "LineDescription",
                    "Qty",
                    "UnitPrice",
                    "Project",
                    "Division",
                    "TaxCode",
                    "TaxAmount",
                    "Amount"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/sales-order-qty-delivered-transactions": {
        "get": {
          "operationId": "GetSalesOrderQtyDeliveredTransactions",
          "summary": "SalesOrderQtyDeliveredTransactions",
          "description": "Retrieve list of salesorderqtydeliveredtransactions. For more information, see https://www.manager.io/guides?sales-order-qty-delivered-transactions",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Date",
                  "Transaction",
                  "Reference",
                  "InventoryItem",
                  "Customer",
                  "Description",
                  "LineDescription",
                  "QtyDelivered"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Date",
                    "Transaction",
                    "Reference",
                    "InventoryItem",
                    "Customer",
                    "Description",
                    "LineDescription",
                    "QtyDelivered"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/sales-order-qty-invoiced-transactions": {
        "get": {
          "operationId": "GetSalesOrderQtyInvoicedTransactions",
          "summary": "SalesOrderQtyInvoicedTransactions",
          "description": "Retrieve list of salesorderqtyinvoicedtransactions. For more information, see https://www.manager.io/guides?sales-order-qty-invoiced-transactions",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Date",
                  "Transaction",
                  "Reference",
                  "InventoryItem",
                  "Customer",
                  "Description",
                  "LineDescription",
                  "QtyInvoiced"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Date",
                    "Transaction",
                    "Reference",
                    "InventoryItem",
                    "Customer",
                    "Description",
                    "LineDescription",
                    "QtyInvoiced"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/sales-order-qty-reserved": {
        "get": {
          "operationId": "GetSalesOrderQtyReserved",
          "summary": "SalesOrderQtyReserved",
          "description": "Retrieve list of salesorderqtyreserved. For more information, see https://www.manager.io/guides?sales-order-qty-reserved",
          "parameters": [
            {
              "name": "salesOrder",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "InventoryItem",
                  "QtyOrdered",
                  "QtyDelivered",
                  "QtyInvoiced",
                  "QtyReserved"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "InventoryItem",
                    "QtyOrdered",
                    "QtyDelivered",
                    "QtyInvoiced",
                    "QtyReserved"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/sales-quote-footers": {
        "get": {
          "operationId": "GetSalesQuoteFooters",
          "summary": "SalesQuoteFooters",
          "description": "Retrieve list of salesquotefooters. For more information, see https://www.manager.io/guides?sales-quote-footers",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "Name",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "Name",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/sales-quote-lines": {
        "get": {
          "operationId": "GetSalesQuoteLines",
          "summary": "SalesQuoteLines",
          "description": "Retrieve list of salesquotelines. For more information, see https://www.manager.io/guides?sales-quote-lines",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "IssueDate",
                  "Reference",
                  "Customer",
                  "Description",
                  "Item",
                  "LineDescription",
                  "Qty",
                  "UnitPrice",
                  "Project",
                  "Division",
                  "TaxCode",
                  "TaxAmount",
                  "Amount"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "IssueDate",
                    "Reference",
                    "Customer",
                    "Description",
                    "Item",
                    "LineDescription",
                    "Qty",
                    "UnitPrice",
                    "Project",
                    "Division",
                    "TaxCode",
                    "TaxAmount",
                    "Amount"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/special-accounts": {
        "get": {
          "operationId": "GetSpecialAccounts",
          "summary": "Special Accounts",
          "description": "Retrieve list of special accounts. For more information, see https://www.manager.io/guides?special-accounts",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "Code",
                  "Name",
                  "ControlAccount",
                  "Division",
                  "Balance",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "Code",
                    "Name",
                    "ControlAccount",
                    "Division",
                    "Balance",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/special-account-starting-balance-list": {
        "get": {
          "operationId": "GetSpecialAccountStartingBalanceList",
          "summary": "SpecialAccountStartingBalanceList",
          "description": "Retrieve list of specialaccountstartingbalancelist. For more information, see https://www.manager.io/guides?special-account-starting-balance-list",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "SpecialAccount",
                  "Balance",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "SpecialAccount",
                    "Balance",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/summary-transactions": {
        "get": {
          "operationId": "GetSummaryTransactions",
          "summary": "SummaryTransactions",
          "description": "Retrieve list of summarytransactions. For more information, see https://www.manager.io/guides?summary-transactions",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Name",
                  "BaseBalance",
                  "AccountBalance",
                  "Date",
                  "Transaction",
                  "BankOrCashAccount",
                  "ExpenseClaimPayer",
                  "Customer",
                  "Supplier",
                  "Employee",
                  "Investment",
                  "CapitalAccount",
                  "Description",
                  "Qty",
                  "Balance",
                  "Name",
                  "Qty",
                  "MarketValue",
                  "Investment",
                  "Qty",
                  "MarketValue",
                  "ClosingBalance",
                  "Date",
                  "Transaction",
                  "BankOrCashAccount",
                  "ExpenseClaimPayer",
                  "Customer",
                  "Supplier",
                  "Employee",
                  "InventoryItem",
                  "CapitalAccount",
                  "Description",
                  "Qty",
                  "Balance",
                  "Name",
                  "Qty",
                  "AverageCost",
                  "TotalCost",
                  "Name",
                  "Balance",
                  "Date",
                  "Transaction",
                  "ConversionMarkup",
                  "Debit",
                  "Credit",
                  "Account",
                  "ForeignBalance",
                  "ConvertedBalance",
                  "ClosingBalance",
                  "Date",
                  "Transaction",
                  "Account",
                  "BankOrCashAccount",
                  "ExpenseClaimPayer",
                  "Customer",
                  "Supplier",
                  "Employee",
                  "InventoryKit",
                  "InventoryItem",
                  "Investment",
                  "FixedAsset",
                  "IntangibleAsset",
                  "CapitalAccount",
                  "SpecialAccount",
                  "Description",
                  "Tax",
                  "Qty",
                  "QtyReduction",
                  "PurchaseCost",
                  "TransactionAmount",
                  "CurrencyAmount",
                  "Debit",
                  "Credit"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Name",
                    "BaseBalance",
                    "AccountBalance",
                    "Date",
                    "Transaction",
                    "BankOrCashAccount",
                    "ExpenseClaimPayer",
                    "Customer",
                    "Supplier",
                    "Employee",
                    "Investment",
                    "CapitalAccount",
                    "Description",
                    "Qty",
                    "Balance",
                    "Name",
                    "Qty",
                    "MarketValue",
                    "Investment",
                    "Qty",
                    "MarketValue",
                    "ClosingBalance",
                    "Date",
                    "Transaction",
                    "BankOrCashAccount",
                    "ExpenseClaimPayer",
                    "Customer",
                    "Supplier",
                    "Employee",
                    "InventoryItem",
                    "CapitalAccount",
                    "Description",
                    "Qty",
                    "Balance",
                    "Name",
                    "Qty",
                    "AverageCost",
                    "TotalCost",
                    "Name",
                    "Balance",
                    "Date",
                    "Transaction",
                    "ConversionMarkup",
                    "Debit",
                    "Credit",
                    "Account",
                    "ForeignBalance",
                    "ConvertedBalance",
                    "ClosingBalance",
                    "Date",
                    "Transaction",
                    "Account",
                    "BankOrCashAccount",
                    "ExpenseClaimPayer",
                    "Customer",
                    "Supplier",
                    "Employee",
                    "InventoryKit",
                    "InventoryItem",
                    "Investment",
                    "FixedAsset",
                    "IntangibleAsset",
                    "CapitalAccount",
                    "SpecialAccount",
                    "Description",
                    "Tax",
                    "Qty",
                    "QtyReduction",
                    "PurchaseCost",
                    "TransactionAmount",
                    "CurrencyAmount",
                    "Debit",
                    "Credit"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/suppliers": {
        "get": {
          "operationId": "GetSuppliers",
          "summary": "Suppliers",
          "description": "Retrieve list of suppliers. For more information, see https://www.manager.io/guides?suppliers",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "Code",
                  "Name",
                  "EmailAddress",
                  "ControlAccount",
                  "Division",
                  "Address",
                  "Receipts",
                  "Payments",
                  "PurchaseQuotes",
                  "PurchaseOrders",
                  "PurchaseInvoices",
                  "DebitNotes",
                  "GoodsReceipts",
                  "QtyToReceive",
                  "AccountsPayable",
                  "WithholdingTaxPayable",
                  "Status",
                  "AvailableCredit",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "Code",
                    "Name",
                    "EmailAddress",
                    "ControlAccount",
                    "Division",
                    "Address",
                    "Receipts",
                    "Payments",
                    "PurchaseQuotes",
                    "PurchaseOrders",
                    "PurchaseInvoices",
                    "DebitNotes",
                    "GoodsReceipts",
                    "QtyToReceive",
                    "AccountsPayable",
                    "WithholdingTaxPayable",
                    "Status",
                    "AvailableCredit",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/suppliers-qty-to-receive": {
        "get": {
          "operationId": "GetSuppliersQtyToReceive",
          "summary": "SuppliersQtyToReceive",
          "description": "Retrieve list of suppliersqtytoreceive. For more information, see https://www.manager.io/guides?suppliers-qty-to-receive",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Supplier",
                  "InventoryItem",
                  "QtyToReceive"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Supplier",
                    "InventoryItem",
                    "QtyToReceive"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/tax-codes": {
        "get": {
          "operationId": "GetTaxCodes",
          "summary": "Tax Codes",
          "description": "Retrieve list of tax codes. For more information, see https://www.manager.io/guides?tax-codes",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "Name",
                  "Transactions",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "Name",
                    "Transactions",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/tax-summary-transactions": {
        "get": {
          "operationId": "GetTaxSummaryTransactions",
          "summary": "TaxSummaryTransactions",
          "description": "Retrieve list of taxsummarytransactions. For more information, see https://www.manager.io/guides?tax-summary-transactions",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Name",
                  "Balance",
                  "Date",
                  "Transaction",
                  "Account",
                  "BankOrCashAccount",
                  "ExpenseClaimPayer",
                  "Customer",
                  "Supplier",
                  "Employee",
                  "InventoryKit",
                  "InventoryItem",
                  "Investment",
                  "FixedAsset",
                  "IntangibleAsset",
                  "CapitalAccount",
                  "SpecialAccount",
                  "Description",
                  "Tax",
                  "Qty",
                  "QtyReduction",
                  "PurchaseCost",
                  "TransactionAmount",
                  "CurrencyAmount",
                  "Debit",
                  "Credit",
                  "Name",
                  "BaseBalance",
                  "AccountBalance",
                  "Investment",
                  "Qty",
                  "MarketPrice",
                  "MarketValue",
                  "AverageCost",
                  "TotalCost",
                  "OpeningUnrealizedGainsLosses",
                  "IncrementsOrDecrementsForThePeriod",
                  "ClosingUnrealizedGainsLosses",
                  "Account",
                  "ForeignBalance",
                  "AdjustedBalance",
                  "CurrentBalance"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Name",
                    "Balance",
                    "Date",
                    "Transaction",
                    "Account",
                    "BankOrCashAccount",
                    "ExpenseClaimPayer",
                    "Customer",
                    "Supplier",
                    "Employee",
                    "InventoryKit",
                    "InventoryItem",
                    "Investment",
                    "FixedAsset",
                    "IntangibleAsset",
                    "CapitalAccount",
                    "SpecialAccount",
                    "Description",
                    "Tax",
                    "Qty",
                    "QtyReduction",
                    "PurchaseCost",
                    "TransactionAmount",
                    "CurrencyAmount",
                    "Debit",
                    "Credit",
                    "Name",
                    "BaseBalance",
                    "AccountBalance",
                    "Investment",
                    "Qty",
                    "MarketPrice",
                    "MarketValue",
                    "AverageCost",
                    "TotalCost",
                    "OpeningUnrealizedGainsLosses",
                    "IncrementsOrDecrementsForThePeriod",
                    "ClosingUnrealizedGainsLosses",
                    "Account",
                    "ForeignBalance",
                    "AdjustedBalance",
                    "CurrentBalance"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/text-custom-fields": {
        "get": {
          "operationId": "GetTextCustomFields",
          "summary": "Text Custom Fields",
          "description": "Retrieve list of text custom fields. For more information, see https://www.manager.io/guides?text-custom-fields",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "Name",
                  "Placement",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "Name",
                    "Placement",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/transactions": {
        "get": {
          "operationId": "GetTransactions",
          "summary": "Transactions",
          "description": "Retrieve list of transactions. For more information, see https://www.manager.io/guides?transactions",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Date",
                  "Transaction",
                  "Reference",
                  "BankOrCashAccount",
                  "Customer",
                  "Supplier",
                  "Employee",
                  "Description",
                  "Item",
                  "Account",
                  "BalanceSheetAccount",
                  "ProfitAndLossStatementAccount",
                  "LineDescription",
                  "Qty",
                  "UnitPrice",
                  "Project",
                  "Division",
                  "TaxCode",
                  "TaxAmount",
                  "Debit",
                  "Credit",
                  "Amount",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Date",
                    "Transaction",
                    "Reference",
                    "BankOrCashAccount",
                    "Customer",
                    "Supplier",
                    "Employee",
                    "Description",
                    "Item",
                    "Account",
                    "BalanceSheetAccount",
                    "ProfitAndLossStatementAccount",
                    "LineDescription",
                    "Qty",
                    "UnitPrice",
                    "Project",
                    "Division",
                    "TaxCode",
                    "TaxAmount",
                    "Debit",
                    "Credit",
                    "Amount",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/trial-balance-transactions": {
        "get": {
          "operationId": "GetTrialBalanceTransactions",
          "summary": "TrialBalanceTransactions",
          "description": "Retrieve list of trialbalancetransactions. For more information, see https://www.manager.io/guides?trial-balance-transactions",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Name",
                  "BaseBalance",
                  "AccountBalance",
                  "Date",
                  "Transaction",
                  "BankOrCashAccount",
                  "ExpenseClaimPayer",
                  "Customer",
                  "Supplier",
                  "Employee",
                  "Investment",
                  "CapitalAccount",
                  "Description",
                  "Qty",
                  "Balance",
                  "Name",
                  "Qty",
                  "MarketValue",
                  "Investment",
                  "Qty",
                  "MarketValue",
                  "ClosingBalance",
                  "Date",
                  "Transaction",
                  "BankOrCashAccount",
                  "ExpenseClaimPayer",
                  "Customer",
                  "Supplier",
                  "Employee",
                  "InventoryItem",
                  "CapitalAccount",
                  "Description",
                  "Qty",
                  "Balance",
                  "Name",
                  "Qty",
                  "AverageCost",
                  "TotalCost",
                  "Name",
                  "Balance",
                  "Date",
                  "Transaction",
                  "ConversionMarkup",
                  "Debit",
                  "Credit",
                  "Account",
                  "ForeignBalance",
                  "ConvertedBalance",
                  "ClosingBalance",
                  "Date",
                  "Transaction",
                  "Account",
                  "BankOrCashAccount",
                  "ExpenseClaimPayer",
                  "Customer",
                  "Supplier",
                  "Employee",
                  "InventoryKit",
                  "InventoryItem",
                  "Investment",
                  "FixedAsset",
                  "IntangibleAsset",
                  "CapitalAccount",
                  "SpecialAccount",
                  "Description",
                  "Tax",
                  "Qty",
                  "QtyReduction",
                  "PurchaseCost",
                  "TransactionAmount",
                  "CurrencyAmount",
                  "Debit",
                  "Credit"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Name",
                    "BaseBalance",
                    "AccountBalance",
                    "Date",
                    "Transaction",
                    "BankOrCashAccount",
                    "ExpenseClaimPayer",
                    "Customer",
                    "Supplier",
                    "Employee",
                    "Investment",
                    "CapitalAccount",
                    "Description",
                    "Qty",
                    "Balance",
                    "Name",
                    "Qty",
                    "MarketValue",
                    "Investment",
                    "Qty",
                    "MarketValue",
                    "ClosingBalance",
                    "Date",
                    "Transaction",
                    "BankOrCashAccount",
                    "ExpenseClaimPayer",
                    "Customer",
                    "Supplier",
                    "Employee",
                    "InventoryItem",
                    "CapitalAccount",
                    "Description",
                    "Qty",
                    "Balance",
                    "Name",
                    "Qty",
                    "AverageCost",
                    "TotalCost",
                    "Name",
                    "Balance",
                    "Date",
                    "Transaction",
                    "ConversionMarkup",
                    "Debit",
                    "Credit",
                    "Account",
                    "ForeignBalance",
                    "ConvertedBalance",
                    "ClosingBalance",
                    "Date",
                    "Transaction",
                    "Account",
                    "BankOrCashAccount",
                    "ExpenseClaimPayer",
                    "Customer",
                    "Supplier",
                    "Employee",
                    "InventoryKit",
                    "InventoryItem",
                    "Investment",
                    "FixedAsset",
                    "IntangibleAsset",
                    "CapitalAccount",
                    "SpecialAccount",
                    "Description",
                    "Tax",
                    "Qty",
                    "QtyReduction",
                    "PurchaseCost",
                    "TransactionAmount",
                    "CurrencyAmount",
                    "Debit",
                    "Credit"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/withholding-tax-receipts": {
        "get": {
          "operationId": "GetWithholdingTaxReceipts",
          "summary": "Withholding Tax Receipts",
          "description": "Retrieve list of withholding tax receipts. For more information, see https://www.manager.io/guides?withholding-tax-receipts",
          "parameters": [
            {
              "name": "term",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByDesc",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "Image",
                  "Attachment",
                  "Date",
                  "Customer",
                  "Description",
                  "Amount",
                  "Timestamp"
                ]
              }
            },
            {
              "name": "skip",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "pageSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fields",
              "required": false,
              "in": "query",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "Image",
                    "Attachment",
                    "Date",
                    "Customer",
                    "Description",
                    "Amount",
                    "Timestamp"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/tabs-form": {
        "post": {
          "operationId": "PostTabsForm",
          "summary": "TabsForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/tabs-form/{key}": {
        "get": {
          "operationId": "GetTabsForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteTabsForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutTabsForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/withholding-tax-receipt-form": {
        "post": {
          "operationId": "PostWithholdingTaxReceiptForm",
          "summary": "WithholdingTaxReceiptForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/withholding-tax-receipt-form/{key}": {
        "get": {
          "operationId": "GetWithholdingTaxReceiptForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteWithholdingTaxReceiptForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutWithholdingTaxReceiptForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/supplier-form": {
        "post": {
          "operationId": "PostSupplierForm",
          "summary": "SupplierForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/supplier-form/{key}": {
        "get": {
          "operationId": "GetSupplierForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteSupplierForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutSupplierForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/summary-form": {
        "post": {
          "operationId": "PostSummaryForm",
          "summary": "SummaryForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/summary-form/{key}": {
        "get": {
          "operationId": "GetSummaryForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteSummaryForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutSummaryForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/special-account-form": {
        "post": {
          "operationId": "PostSpecialAccountForm",
          "summary": "SpecialAccountForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/special-account-form/{key}": {
        "get": {
          "operationId": "GetSpecialAccountForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteSpecialAccountForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutSpecialAccountForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/withholding-tax-form": {
        "post": {
          "operationId": "PostWithholdingTaxForm",
          "summary": "WithholdingTaxForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/withholding-tax-form/{key}": {
        "get": {
          "operationId": "GetWithholdingTaxForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteWithholdingTaxForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutWithholdingTaxForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/web-service-for-exchange-rates-form": {
        "post": {
          "operationId": "PostWebServiceForExchangeRatesForm",
          "summary": "WebServiceForExchangeRatesForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/web-service-for-exchange-rates-form/{key}": {
        "get": {
          "operationId": "GetWebServiceForExchangeRatesForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteWebServiceForExchangeRatesForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutWebServiceForExchangeRatesForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/user-permissions-form": {
        "post": {
          "operationId": "PostUserPermissionsForm",
          "summary": "UserPermissionsForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/user-permissions-form/{key}": {
        "get": {
          "operationId": "GetUserPermissionsForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteUserPermissionsForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutUserPermissionsForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/tax-code-form": {
        "post": {
          "operationId": "PostTaxCodeForm",
          "summary": "TaxCodeForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/tax-code-form/{key}": {
        "get": {
          "operationId": "GetTaxCodeForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteTaxCodeForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutTaxCodeForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/special-account-starting-balance-form": {
        "post": {
          "operationId": "PostSpecialAccountStartingBalanceForm",
          "summary": "SpecialAccountStartingBalanceForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/special-account-starting-balance-form/{key}": {
        "get": {
          "operationId": "GetSpecialAccountStartingBalanceForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteSpecialAccountStartingBalanceForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutSpecialAccountStartingBalanceForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/sales-invoice-starting-balance-form": {
        "post": {
          "operationId": "PostSalesInvoiceStartingBalanceForm",
          "summary": "SalesInvoiceStartingBalanceForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/sales-invoice-starting-balance-form/{key}": {
        "get": {
          "operationId": "GetSalesInvoiceStartingBalanceForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteSalesInvoiceStartingBalanceForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutSalesInvoiceStartingBalanceForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/purchase-invoice-starting-balance-form": {
        "post": {
          "operationId": "PostPurchaseInvoiceStartingBalanceForm",
          "summary": "PurchaseInvoiceStartingBalanceForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/purchase-invoice-starting-balance-form/{key}": {
        "get": {
          "operationId": "GetPurchaseInvoiceStartingBalanceForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeletePurchaseInvoiceStartingBalanceForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutPurchaseInvoiceStartingBalanceForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/investment-starting-balance-form": {
        "post": {
          "operationId": "PostInvestmentStartingBalanceForm",
          "summary": "InvestmentStartingBalanceForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/investment-starting-balance-form/{key}": {
        "get": {
          "operationId": "GetInvestmentStartingBalanceForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteInvestmentStartingBalanceForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutInvestmentStartingBalanceForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/inventory-item-starting-balance-form": {
        "post": {
          "operationId": "PostInventoryItemStartingBalanceForm",
          "summary": "InventoryItemStartingBalanceForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/inventory-item-starting-balance-form/{key}": {
        "get": {
          "operationId": "GetInventoryItemStartingBalanceForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteInventoryItemStartingBalanceForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutInventoryItemStartingBalanceForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/intangible-asset-starting-balance-form": {
        "post": {
          "operationId": "PostIntangibleAssetStartingBalanceForm",
          "summary": "IntangibleAssetStartingBalanceForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/intangible-asset-starting-balance-form/{key}": {
        "get": {
          "operationId": "GetIntangibleAssetStartingBalanceForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteIntangibleAssetStartingBalanceForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutIntangibleAssetStartingBalanceForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/fixed-asset-starting-balance-form": {
        "post": {
          "operationId": "PostFixedAssetStartingBalanceForm",
          "summary": "FixedAssetStartingBalanceForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/fixed-asset-starting-balance-form/{key}": {
        "get": {
          "operationId": "GetFixedAssetStartingBalanceForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteFixedAssetStartingBalanceForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutFixedAssetStartingBalanceForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/employee-starting-balance-form": {
        "post": {
          "operationId": "PostEmployeeStartingBalanceForm",
          "summary": "EmployeeStartingBalanceForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/employee-starting-balance-form/{key}": {
        "get": {
          "operationId": "GetEmployeeStartingBalanceForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteEmployeeStartingBalanceForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutEmployeeStartingBalanceForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/capital-account-starting-balance-form": {
        "post": {
          "operationId": "PostCapitalAccountStartingBalanceForm",
          "summary": "CapitalAccountStartingBalanceForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/capital-account-starting-balance-form/{key}": {
        "get": {
          "operationId": "GetCapitalAccountStartingBalanceForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteCapitalAccountStartingBalanceForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutCapitalAccountStartingBalanceForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/bank-or-cash-account-starting-balance-form": {
        "post": {
          "operationId": "PostBankOrCashAccountStartingBalanceForm",
          "summary": "BankOrCashAccountStartingBalanceForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/bank-or-cash-account-starting-balance-form/{key}": {
        "get": {
          "operationId": "GetBankOrCashAccountStartingBalanceForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteBankOrCashAccountStartingBalanceForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutBankOrCashAccountStartingBalanceForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/balance-sheet-account-starting-balance-form": {
        "post": {
          "operationId": "PostBalanceSheetAccountStartingBalanceForm",
          "summary": "BalanceSheetAccountStartingBalanceForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/balance-sheet-account-starting-balance-form/{key}": {
        "get": {
          "operationId": "GetBalanceSheetAccountStartingBalanceForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteBalanceSheetAccountStartingBalanceForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutBalanceSheetAccountStartingBalanceForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/report-transformation-form": {
        "post": {
          "operationId": "PostReportTransformationForm",
          "summary": "ReportTransformationForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/report-transformation-form/{key}": {
        "get": {
          "operationId": "GetReportTransformationForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteReportTransformationForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutReportTransformationForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/tax-amount-reporting-category-form": {
        "post": {
          "operationId": "PostTaxAmountReportingCategoryForm",
          "summary": "TaxAmountReportingCategoryForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/tax-amount-reporting-category-form/{key}": {
        "get": {
          "operationId": "GetTaxAmountReportingCategoryForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteTaxAmountReportingCategoryForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutTaxAmountReportingCategoryForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/tax-amount-reversed-reporting-category-form": {
        "post": {
          "operationId": "PostTaxAmountReversedReportingCategoryForm",
          "summary": "TaxAmountReversedReportingCategoryForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/tax-amount-reversed-reporting-category-form/{key}": {
        "get": {
          "operationId": "GetTaxAmountReversedReportingCategoryForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteTaxAmountReversedReportingCategoryForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutTaxAmountReversedReportingCategoryForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/tax-code-reversed-reporting-category-form": {
        "post": {
          "operationId": "PostTaxCodeReversedReportingCategoryForm",
          "summary": "TaxCodeReversedReportingCategoryForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/tax-code-reversed-reporting-category-form/{key}": {
        "get": {
          "operationId": "GetTaxCodeReversedReportingCategoryForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteTaxCodeReversedReportingCategoryForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutTaxCodeReversedReportingCategoryForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/tax-code-reporting-category-form": {
        "post": {
          "operationId": "PostTaxCodeReportingCategoryForm",
          "summary": "TaxCodeReportingCategoryForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/tax-code-reporting-category-form/{key}": {
        "get": {
          "operationId": "GetTaxCodeReportingCategoryForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteTaxCodeReportingCategoryForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutTaxCodeReportingCategoryForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/payslip-earnings-item-reporting-category-form": {
        "post": {
          "operationId": "PostPayslipEarningsItemReportingCategoryForm",
          "summary": "PayslipEarningsItemReportingCategoryForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/payslip-earnings-item-reporting-category-form/{key}": {
        "get": {
          "operationId": "GetPayslipEarningsItemReportingCategoryForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeletePayslipEarningsItemReportingCategoryForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutPayslipEarningsItemReportingCategoryForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/payslip-deduction-item-reporting-category-form": {
        "post": {
          "operationId": "PostPayslipDeductionItemReportingCategoryForm",
          "summary": "PayslipDeductionItemReportingCategoryForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/payslip-deduction-item-reporting-category-form/{key}": {
        "get": {
          "operationId": "GetPayslipDeductionItemReportingCategoryForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeletePayslipDeductionItemReportingCategoryForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutPayslipDeductionItemReportingCategoryForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/payslip-contribution-item-reporting-category-form": {
        "post": {
          "operationId": "PostPayslipContributionItemReportingCategoryForm",
          "summary": "PayslipContributionItemReportingCategoryForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/payslip-contribution-item-reporting-category-form/{key}": {
        "get": {
          "operationId": "GetPayslipContributionItemReportingCategoryForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeletePayslipContributionItemReportingCategoryForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutPayslipContributionItemReportingCategoryForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/report-transformation-label-form": {
        "post": {
          "operationId": "PostReportTransformationLabelForm",
          "summary": "ReportTransformationLabelForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/report-transformation-label-form/{key}": {
        "get": {
          "operationId": "GetReportTransformationLabelForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteReportTransformationLabelForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutReportTransformationLabelForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/recurring-sales-quote-form": {
        "post": {
          "operationId": "PostRecurringSalesQuoteForm",
          "summary": "RecurringSalesQuoteForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/recurring-sales-quote-form/{key}": {
        "get": {
          "operationId": "GetRecurringSalesQuoteForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteRecurringSalesQuoteForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutRecurringSalesQuoteForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/recurring-sales-order-form": {
        "post": {
          "operationId": "PostRecurringSalesOrderForm",
          "summary": "RecurringSalesOrderForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/recurring-sales-order-form/{key}": {
        "get": {
          "operationId": "GetRecurringSalesOrderForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteRecurringSalesOrderForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutRecurringSalesOrderForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/recurring-sales-invoice-form": {
        "post": {
          "operationId": "PostRecurringSalesInvoiceForm",
          "summary": "RecurringSalesInvoiceForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/recurring-sales-invoice-form/{key}": {
        "get": {
          "operationId": "GetRecurringSalesInvoiceForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteRecurringSalesInvoiceForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutRecurringSalesInvoiceForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/recurring-receipt-form": {
        "post": {
          "operationId": "PostRecurringReceiptForm",
          "summary": "RecurringReceiptForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/recurring-receipt-form/{key}": {
        "get": {
          "operationId": "GetRecurringReceiptForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteRecurringReceiptForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutRecurringReceiptForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/recurring-purchase-order-form": {
        "post": {
          "operationId": "PostRecurringPurchaseOrderForm",
          "summary": "RecurringPurchaseOrderForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/recurring-purchase-order-form/{key}": {
        "get": {
          "operationId": "GetRecurringPurchaseOrderForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteRecurringPurchaseOrderForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutRecurringPurchaseOrderForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/recurring-purchase-invoice-form": {
        "post": {
          "operationId": "PostRecurringPurchaseInvoiceForm",
          "summary": "RecurringPurchaseInvoiceForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/recurring-purchase-invoice-form/{key}": {
        "get": {
          "operationId": "GetRecurringPurchaseInvoiceForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteRecurringPurchaseInvoiceForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutRecurringPurchaseInvoiceForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/recurring-payslip-form": {
        "post": {
          "operationId": "PostRecurringPayslipForm",
          "summary": "RecurringPayslipForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/recurring-payslip-form/{key}": {
        "get": {
          "operationId": "GetRecurringPayslipForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteRecurringPayslipForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutRecurringPayslipForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/recurring-payment-form": {
        "post": {
          "operationId": "PostRecurringPaymentForm",
          "summary": "RecurringPaymentForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/recurring-payment-form/{key}": {
        "get": {
          "operationId": "GetRecurringPaymentForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteRecurringPaymentForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutRecurringPaymentForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/recurring-journal-entry-form": {
        "post": {
          "operationId": "PostRecurringJournalEntryForm",
          "summary": "RecurringJournalEntryForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/recurring-journal-entry-form/{key}": {
        "get": {
          "operationId": "GetRecurringJournalEntryForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteRecurringJournalEntryForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutRecurringJournalEntryForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/recurring-inter-account-transfer-form": {
        "post": {
          "operationId": "PostRecurringInterAccountTransferForm",
          "summary": "RecurringInterAccountTransferForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/recurring-inter-account-transfer-form/{key}": {
        "get": {
          "operationId": "GetRecurringInterAccountTransferForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteRecurringInterAccountTransferForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutRecurringInterAccountTransferForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/payslip-earnings-item-form": {
        "post": {
          "operationId": "PostPayslipEarningsItemForm",
          "summary": "PayslipEarningsItemForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/payslip-earnings-item-form/{key}": {
        "get": {
          "operationId": "GetPayslipEarningsItemForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeletePayslipEarningsItemForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutPayslipEarningsItemForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/payslip-deduction-item-form": {
        "post": {
          "operationId": "PostPayslipDeductionItemForm",
          "summary": "PayslipDeductionItemForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/payslip-deduction-item-form/{key}": {
        "get": {
          "operationId": "GetPayslipDeductionItemForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeletePayslipDeductionItemForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutPayslipDeductionItemForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/payslip-employer-contribution-item-form": {
        "post": {
          "operationId": "PostPayslipEmployerContributionItemForm",
          "summary": "PayslipEmployerContributionItemForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/payslip-employer-contribution-item-form/{key}": {
        "get": {
          "operationId": "GetPayslipEmployerContributionItemForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeletePayslipEmployerContributionItemForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutPayslipEmployerContributionItemForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/theme-form": {
        "post": {
          "operationId": "PostThemeForm",
          "summary": "ThemeForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/theme-form/{key}": {
        "get": {
          "operationId": "GetThemeForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteThemeForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutThemeForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/inventory-automatic-revaluation-form": {
        "post": {
          "operationId": "PostInventoryAutomaticRevaluationForm",
          "summary": "InventoryAutomaticRevaluationForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/inventory-automatic-revaluation-form/{key}": {
        "get": {
          "operationId": "GetInventoryAutomaticRevaluationForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteInventoryAutomaticRevaluationForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutInventoryAutomaticRevaluationForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/internal-pdf-generator-form": {
        "post": {
          "operationId": "PostInternalPdfGeneratorForm",
          "summary": "InternalPdfGeneratorForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/internal-pdf-generator-form/{key}": {
        "get": {
          "operationId": "GetInternalPdfGeneratorForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteInternalPdfGeneratorForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutInternalPdfGeneratorForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/extension-form": {
        "post": {
          "operationId": "PostExtensionForm",
          "summary": "ExtensionForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/extension-form/{key}": {
        "get": {
          "operationId": "GetExtensionForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteExtensionForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutExtensionForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/classic-custom-field-form": {
        "post": {
          "operationId": "PostClassicCustomFieldForm",
          "summary": "ClassicCustomFieldForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/classic-custom-field-form/{key}": {
        "get": {
          "operationId": "GetClassicCustomFieldForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteClassicCustomFieldForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutClassicCustomFieldForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/non-inventory-item-form": {
        "post": {
          "operationId": "PostNonInventoryItemForm",
          "summary": "NonInventoryItemForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/non-inventory-item-form/{key}": {
        "get": {
          "operationId": "GetNonInventoryItemForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteNonInventoryItemForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutNonInventoryItemForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/lock-date-form": {
        "post": {
          "operationId": "PostLockDateForm",
          "summary": "LockDateForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/lock-date-form/{key}": {
        "get": {
          "operationId": "GetLockDateForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteLockDateForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutLockDateForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/investment-market-price-form": {
        "post": {
          "operationId": "PostInvestmentMarketPriceForm",
          "summary": "InvestmentMarketPriceForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/investment-market-price-form/{key}": {
        "get": {
          "operationId": "GetInvestmentMarketPriceForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteInvestmentMarketPriceForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutInvestmentMarketPriceForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/inventory-revaluation-form": {
        "post": {
          "operationId": "PostInventoryRevaluationForm",
          "summary": "InventoryRevaluationForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/inventory-revaluation-form/{key}": {
        "get": {
          "operationId": "GetInventoryRevaluationForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteInventoryRevaluationForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutInventoryRevaluationForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/inventory-location-form": {
        "post": {
          "operationId": "PostInventoryLocationForm",
          "summary": "InventoryLocationForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/inventory-location-form/{key}": {
        "get": {
          "operationId": "GetInventoryLocationForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteInventoryLocationForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutInventoryLocationForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/inventory-kit-form": {
        "post": {
          "operationId": "PostInventoryKitForm",
          "summary": "InventoryKitForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/inventory-kit-form/{key}": {
        "get": {
          "operationId": "GetInventoryKitForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteInventoryKitForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutInventoryKitForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/forecast-form": {
        "post": {
          "operationId": "PostForecastForm",
          "summary": "ForecastForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/forecast-form/{key}": {
        "get": {
          "operationId": "GetForecastForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteForecastForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutForecastForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/sales-quote-footer-form": {
        "post": {
          "operationId": "PostSalesQuoteFooterForm",
          "summary": "SalesQuoteFooterForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/sales-quote-footer-form/{key}": {
        "get": {
          "operationId": "GetSalesQuoteFooterForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteSalesQuoteFooterForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutSalesQuoteFooterForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/sales-order-footer-form": {
        "post": {
          "operationId": "PostSalesOrderFooterForm",
          "summary": "SalesOrderFooterForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/sales-order-footer-form/{key}": {
        "get": {
          "operationId": "GetSalesOrderFooterForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteSalesOrderFooterForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutSalesOrderFooterForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/sales-invoice-footer-form": {
        "post": {
          "operationId": "PostSalesInvoiceFooterForm",
          "summary": "SalesInvoiceFooterForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/sales-invoice-footer-form/{key}": {
        "get": {
          "operationId": "GetSalesInvoiceFooterForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteSalesInvoiceFooterForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutSalesInvoiceFooterForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/receipt-footer-form": {
        "post": {
          "operationId": "PostReceiptFooterForm",
          "summary": "ReceiptFooterForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/receipt-footer-form/{key}": {
        "get": {
          "operationId": "GetReceiptFooterForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteReceiptFooterForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutReceiptFooterForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/purchase-quote-footer-form": {
        "post": {
          "operationId": "PostPurchaseQuoteFooterForm",
          "summary": "PurchaseQuoteFooterForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/purchase-quote-footer-form/{key}": {
        "get": {
          "operationId": "GetPurchaseQuoteFooterForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeletePurchaseQuoteFooterForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutPurchaseQuoteFooterForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/purchase-order-footer-form": {
        "post": {
          "operationId": "PostPurchaseOrderFooterForm",
          "summary": "PurchaseOrderFooterForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/purchase-order-footer-form/{key}": {
        "get": {
          "operationId": "GetPurchaseOrderFooterForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeletePurchaseOrderFooterForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutPurchaseOrderFooterForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/purchase-invoice-footer-form": {
        "post": {
          "operationId": "PostPurchaseInvoiceFooterForm",
          "summary": "PurchaseInvoiceFooterForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/purchase-invoice-footer-form/{key}": {
        "get": {
          "operationId": "GetPurchaseInvoiceFooterForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeletePurchaseInvoiceFooterForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutPurchaseInvoiceFooterForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/payslip-footer-form": {
        "post": {
          "operationId": "PostPayslipFooterForm",
          "summary": "PayslipFooterForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/payslip-footer-form/{key}": {
        "get": {
          "operationId": "GetPayslipFooterForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeletePayslipFooterForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutPayslipFooterForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/payment-footer-form": {
        "post": {
          "operationId": "PostPaymentFooterForm",
          "summary": "PaymentFooterForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/payment-footer-form/{key}": {
        "get": {
          "operationId": "GetPaymentFooterForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeletePaymentFooterForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutPaymentFooterForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/journal-entry-footer-form": {
        "post": {
          "operationId": "PostJournalEntryFooterForm",
          "summary": "JournalEntryFooterForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/journal-entry-footer-form/{key}": {
        "get": {
          "operationId": "GetJournalEntryFooterForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteJournalEntryFooterForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutJournalEntryFooterForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/inter-account-transfer-footer-form": {
        "post": {
          "operationId": "PostInterAccountTransferFooterForm",
          "summary": "InterAccountTransferFooterForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/inter-account-transfer-footer-form/{key}": {
        "get": {
          "operationId": "GetInterAccountTransferFooterForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteInterAccountTransferFooterForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutInterAccountTransferFooterForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/goods-receipt-footer-form": {
        "post": {
          "operationId": "PostGoodsReceiptFooterForm",
          "summary": "GoodsReceiptFooterForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/goods-receipt-footer-form/{key}": {
        "get": {
          "operationId": "GetGoodsReceiptFooterForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteGoodsReceiptFooterForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutGoodsReceiptFooterForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/expense-claim-footer-form": {
        "post": {
          "operationId": "PostExpenseClaimFooterForm",
          "summary": "ExpenseClaimFooterForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/expense-claim-footer-form/{key}": {
        "get": {
          "operationId": "GetExpenseClaimFooterForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteExpenseClaimFooterForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutExpenseClaimFooterForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/delivery-note-footer-form": {
        "post": {
          "operationId": "PostDeliveryNoteFooterForm",
          "summary": "DeliveryNoteFooterForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/delivery-note-footer-form/{key}": {
        "get": {
          "operationId": "GetDeliveryNoteFooterForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteDeliveryNoteFooterForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutDeliveryNoteFooterForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/debit-note-footer-form": {
        "post": {
          "operationId": "PostDebitNoteFooterForm",
          "summary": "DebitNoteFooterForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/debit-note-footer-form/{key}": {
        "get": {
          "operationId": "GetDebitNoteFooterForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteDebitNoteFooterForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutDebitNoteFooterForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/credit-note-footer-form": {
        "post": {
          "operationId": "PostCreditNoteFooterForm",
          "summary": "CreditNoteFooterForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/credit-note-footer-form/{key}": {
        "get": {
          "operationId": "GetCreditNoteFooterForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteCreditNoteFooterForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutCreditNoteFooterForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/expense-claim-payer-form": {
        "post": {
          "operationId": "PostExpenseClaimPayerForm",
          "summary": "ExpenseClaimPayerForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/expense-claim-payer-form/{key}": {
        "get": {
          "operationId": "GetExpenseClaimPayerForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteExpenseClaimPayerForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutExpenseClaimPayerForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/email-settings-form": {
        "post": {
          "operationId": "PostEmailSettingsForm",
          "summary": "EmailSettingsForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/email-settings-form/{key}": {
        "get": {
          "operationId": "GetEmailSettingsForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteEmailSettingsForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutEmailSettingsForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/email-template-for-sales-quote-form": {
        "post": {
          "operationId": "PostEmailTemplateForSalesQuoteForm",
          "summary": "EmailTemplateForSalesQuoteForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/email-template-for-sales-quote-form/{key}": {
        "get": {
          "operationId": "GetEmailTemplateForSalesQuoteForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteEmailTemplateForSalesQuoteForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutEmailTemplateForSalesQuoteForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/email-template-for-sales-order-form": {
        "post": {
          "operationId": "PostEmailTemplateForSalesOrderForm",
          "summary": "EmailTemplateForSalesOrderForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/email-template-for-sales-order-form/{key}": {
        "get": {
          "operationId": "GetEmailTemplateForSalesOrderForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteEmailTemplateForSalesOrderForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutEmailTemplateForSalesOrderForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/email-template-for-sales-invoice-form": {
        "post": {
          "operationId": "PostEmailTemplateForSalesInvoiceForm",
          "summary": "EmailTemplateForSalesInvoiceForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/email-template-for-sales-invoice-form/{key}": {
        "get": {
          "operationId": "GetEmailTemplateForSalesInvoiceForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteEmailTemplateForSalesInvoiceForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutEmailTemplateForSalesInvoiceForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/email-template-for-receipt-form": {
        "post": {
          "operationId": "PostEmailTemplateForReceiptForm",
          "summary": "EmailTemplateForReceiptForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/email-template-for-receipt-form/{key}": {
        "get": {
          "operationId": "GetEmailTemplateForReceiptForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteEmailTemplateForReceiptForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutEmailTemplateForReceiptForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/email-template-for-purchase-quote-form": {
        "post": {
          "operationId": "PostEmailTemplateForPurchaseQuoteForm",
          "summary": "EmailTemplateForPurchaseQuoteForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/email-template-for-purchase-quote-form/{key}": {
        "get": {
          "operationId": "GetEmailTemplateForPurchaseQuoteForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteEmailTemplateForPurchaseQuoteForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutEmailTemplateForPurchaseQuoteForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/email-template-for-purchase-order-form": {
        "post": {
          "operationId": "PostEmailTemplateForPurchaseOrderForm",
          "summary": "EmailTemplateForPurchaseOrderForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/email-template-for-purchase-order-form/{key}": {
        "get": {
          "operationId": "GetEmailTemplateForPurchaseOrderForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteEmailTemplateForPurchaseOrderForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutEmailTemplateForPurchaseOrderForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/email-template-for-purchase-invoice-form": {
        "post": {
          "operationId": "PostEmailTemplateForPurchaseInvoiceForm",
          "summary": "EmailTemplateForPurchaseInvoiceForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/email-template-for-purchase-invoice-form/{key}": {
        "get": {
          "operationId": "GetEmailTemplateForPurchaseInvoiceForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteEmailTemplateForPurchaseInvoiceForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutEmailTemplateForPurchaseInvoiceForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/email-template-for-payslip-form": {
        "post": {
          "operationId": "PostEmailTemplateForPayslipForm",
          "summary": "EmailTemplateForPayslipForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/email-template-for-payslip-form/{key}": {
        "get": {
          "operationId": "GetEmailTemplateForPayslipForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteEmailTemplateForPayslipForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutEmailTemplateForPayslipForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/email-template-for-payment-form": {
        "post": {
          "operationId": "PostEmailTemplateForPaymentForm",
          "summary": "EmailTemplateForPaymentForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/email-template-for-payment-form/{key}": {
        "get": {
          "operationId": "GetEmailTemplateForPaymentForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteEmailTemplateForPaymentForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutEmailTemplateForPaymentForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/email-template-for-delivery-note-form": {
        "post": {
          "operationId": "PostEmailTemplateForDeliveryNoteForm",
          "summary": "EmailTemplateForDeliveryNoteForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/email-template-for-delivery-note-form/{key}": {
        "get": {
          "operationId": "GetEmailTemplateForDeliveryNoteForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteEmailTemplateForDeliveryNoteForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutEmailTemplateForDeliveryNoteForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/email-template-for-debit-note-form": {
        "post": {
          "operationId": "PostEmailTemplateForDebitNoteForm",
          "summary": "EmailTemplateForDebitNoteForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/email-template-for-debit-note-form/{key}": {
        "get": {
          "operationId": "GetEmailTemplateForDebitNoteForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteEmailTemplateForDebitNoteForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutEmailTemplateForDebitNoteForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/email-template-for-customer-statement-form": {
        "post": {
          "operationId": "PostEmailTemplateForCustomerStatementForm",
          "summary": "EmailTemplateForCustomerStatementForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/email-template-for-customer-statement-form/{key}": {
        "get": {
          "operationId": "GetEmailTemplateForCustomerStatementForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteEmailTemplateForCustomerStatementForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutEmailTemplateForCustomerStatementForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/email-template-for-credit-note-form": {
        "post": {
          "operationId": "PostEmailTemplateForCreditNoteForm",
          "summary": "EmailTemplateForCreditNoteForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/email-template-for-credit-note-form/{key}": {
        "get": {
          "operationId": "GetEmailTemplateForCreditNoteForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteEmailTemplateForCreditNoteForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutEmailTemplateForCreditNoteForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/division-form": {
        "post": {
          "operationId": "PostDivisionForm",
          "summary": "DivisionForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/division-form/{key}": {
        "get": {
          "operationId": "GetDivisionForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteDivisionForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutDivisionForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/date-and-number-format-form": {
        "post": {
          "operationId": "PostDateAndNumberFormatForm",
          "summary": "DateAndNumberFormatForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/date-and-number-format-form/{key}": {
        "get": {
          "operationId": "GetDateAndNumberFormatForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteDateAndNumberFormatForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutDateAndNumberFormatForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/text-custom-field-form": {
        "post": {
          "operationId": "PostTextCustomFieldForm",
          "summary": "TextCustomFieldForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/text-custom-field-form/{key}": {
        "get": {
          "operationId": "GetTextCustomFieldForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteTextCustomFieldForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutTextCustomFieldForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/number-custom-field-form": {
        "post": {
          "operationId": "PostNumberCustomFieldForm",
          "summary": "NumberCustomFieldForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/number-custom-field-form/{key}": {
        "get": {
          "operationId": "GetNumberCustomFieldForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteNumberCustomFieldForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutNumberCustomFieldForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/multiple-value-custom-field-form": {
        "post": {
          "operationId": "PostMultipleValueCustomFieldForm",
          "summary": "MultipleValueCustomFieldForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/multiple-value-custom-field-form/{key}": {
        "get": {
          "operationId": "GetMultipleValueCustomFieldForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteMultipleValueCustomFieldForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutMultipleValueCustomFieldForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/date-custom-field-form": {
        "post": {
          "operationId": "PostDateCustomFieldForm",
          "summary": "DateCustomFieldForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/date-custom-field-form/{key}": {
        "get": {
          "operationId": "GetDateCustomFieldForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteDateCustomFieldForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutDateCustomFieldForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/checkbox-custom-field-form": {
        "post": {
          "operationId": "PostCheckboxCustomFieldForm",
          "summary": "CheckboxCustomFieldForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/checkbox-custom-field-form/{key}": {
        "get": {
          "operationId": "GetCheckboxCustomFieldForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteCheckboxCustomFieldForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutCheckboxCustomFieldForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/customer-portal-form": {
        "post": {
          "operationId": "PostCustomerPortalForm",
          "summary": "CustomerPortalForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/customer-portal-form/{key}": {
        "get": {
          "operationId": "GetCustomerPortalForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteCustomerPortalForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutCustomerPortalForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/foreign-currency-form": {
        "post": {
          "operationId": "PostForeignCurrencyForm",
          "summary": "ForeignCurrencyForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/foreign-currency-form/{key}": {
        "get": {
          "operationId": "GetForeignCurrencyForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteForeignCurrencyForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutForeignCurrencyForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/exchange-rate-form": {
        "post": {
          "operationId": "PostExchangeRateForm",
          "summary": "ExchangeRateForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/exchange-rate-form/{key}": {
        "get": {
          "operationId": "GetExchangeRateForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteExchangeRateForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutExchangeRateForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/base-currency-form": {
        "post": {
          "operationId": "PostBaseCurrencyForm",
          "summary": "BaseCurrencyForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/base-currency-form/{key}": {
        "get": {
          "operationId": "GetBaseCurrencyForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteBaseCurrencyForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutBaseCurrencyForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/control-account-for-suppliers-form": {
        "post": {
          "operationId": "PostControlAccountForSuppliersForm",
          "summary": "ControlAccountForSuppliersForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/control-account-for-suppliers-form/{key}": {
        "get": {
          "operationId": "GetControlAccountForSuppliersForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteControlAccountForSuppliersForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutControlAccountForSuppliersForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/control-account-for-special-accounts-form": {
        "post": {
          "operationId": "PostControlAccountForSpecialAccountsForm",
          "summary": "ControlAccountForSpecialAccountsForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/control-account-for-special-accounts-form/{key}": {
        "get": {
          "operationId": "GetControlAccountForSpecialAccountsForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteControlAccountForSpecialAccountsForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutControlAccountForSpecialAccountsForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/control-account-for-investments-form": {
        "post": {
          "operationId": "PostControlAccountForInvestmentsForm",
          "summary": "ControlAccountForInvestmentsForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/control-account-for-investments-form/{key}": {
        "get": {
          "operationId": "GetControlAccountForInvestmentsForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteControlAccountForInvestmentsForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutControlAccountForInvestmentsForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/control-account-for-inventory-items-form": {
        "post": {
          "operationId": "PostControlAccountForInventoryItemsForm",
          "summary": "ControlAccountForInventoryItemsForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/control-account-for-inventory-items-form/{key}": {
        "get": {
          "operationId": "GetControlAccountForInventoryItemsForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteControlAccountForInventoryItemsForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutControlAccountForInventoryItemsForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/control-account-for-intangible-assets-form": {
        "post": {
          "operationId": "PostControlAccountForIntangibleAssetsForm",
          "summary": "ControlAccountForIntangibleAssetsForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/control-account-for-intangible-assets-form/{key}": {
        "get": {
          "operationId": "GetControlAccountForIntangibleAssetsForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteControlAccountForIntangibleAssetsForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutControlAccountForIntangibleAssetsForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/control-account-for-fixed-assets-form": {
        "post": {
          "operationId": "PostControlAccountForFixedAssetsForm",
          "summary": "ControlAccountForFixedAssetsForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/control-account-for-fixed-assets-form/{key}": {
        "get": {
          "operationId": "GetControlAccountForFixedAssetsForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteControlAccountForFixedAssetsForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutControlAccountForFixedAssetsForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/control-account-for-employees-form": {
        "post": {
          "operationId": "PostControlAccountForEmployeesForm",
          "summary": "ControlAccountForEmployeesForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/control-account-for-employees-form/{key}": {
        "get": {
          "operationId": "GetControlAccountForEmployeesForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteControlAccountForEmployeesForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutControlAccountForEmployeesForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/control-account-for-fixed-assets-accumulated-depreciation-form": {
        "post": {
          "operationId": "PostControlAccountForFixedAssetsAccumulatedDepreciationForm",
          "summary": "ControlAccountForFixedAssetsAccumulatedDepreciationForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/control-account-for-fixed-assets-accumulated-depreciation-form/{key}": {
        "get": {
          "operationId": "GetControlAccountForFixedAssetsAccumulatedDepreciationForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteControlAccountForFixedAssetsAccumulatedDepreciationForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutControlAccountForFixedAssetsAccumulatedDepreciationForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/control-account-for-customers-form": {
        "post": {
          "operationId": "PostControlAccountForCustomersForm",
          "summary": "ControlAccountForCustomersForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/control-account-for-customers-form/{key}": {
        "get": {
          "operationId": "GetControlAccountForCustomersForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteControlAccountForCustomersForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutControlAccountForCustomersForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/control-account-for-capital-accounts-form": {
        "post": {
          "operationId": "PostControlAccountForCapitalAccountsForm",
          "summary": "ControlAccountForCapitalAccountsForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/control-account-for-capital-accounts-form/{key}": {
        "get": {
          "operationId": "GetControlAccountForCapitalAccountsForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteControlAccountForCapitalAccountsForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutControlAccountForCapitalAccountsForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/control-account-for-bank-accounts-form": {
        "post": {
          "operationId": "PostControlAccountForBankAccountsForm",
          "summary": "ControlAccountForBankAccountsForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/control-account-for-bank-accounts-form/{key}": {
        "get": {
          "operationId": "GetControlAccountForBankAccountsForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteControlAccountForBankAccountsForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutControlAccountForBankAccountsForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/control-account-for-intangible-assets-accumulated-amortization-form": {
        "post": {
          "operationId": "PostControlAccountForIntangibleAssetsAccumulatedAmortizationForm",
          "summary": "ControlAccountForIntangibleAssetsAccumulatedAmortizationForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/control-account-for-intangible-assets-accumulated-amortization-form/{key}": {
        "get": {
          "operationId": "GetControlAccountForIntangibleAssetsAccumulatedAmortizationForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteControlAccountForIntangibleAssetsAccumulatedAmortizationForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutControlAccountForIntangibleAssetsAccumulatedAmortizationForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/balance-sheet-account-form": {
        "post": {
          "operationId": "PostBalanceSheetAccountForm",
          "summary": "BalanceSheetAccountForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/balance-sheet-account-form/{key}": {
        "get": {
          "operationId": "GetBalanceSheetAccountForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteBalanceSheetAccountForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutBalanceSheetAccountForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/balance-sheet-accounts-payable-account-form": {
        "post": {
          "operationId": "PostBalanceSheetAccountsPayableAccountForm",
          "summary": "BalanceSheetAccountsPayableAccountForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/balance-sheet-accounts-payable-account-form/{key}": {
        "get": {
          "operationId": "GetBalanceSheetAccountsPayableAccountForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteBalanceSheetAccountsPayableAccountForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutBalanceSheetAccountsPayableAccountForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/balance-sheet-accounts-receivable-account-form": {
        "post": {
          "operationId": "PostBalanceSheetAccountsReceivableAccountForm",
          "summary": "BalanceSheetAccountsReceivableAccountForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/balance-sheet-accounts-receivable-account-form/{key}": {
        "get": {
          "operationId": "GetBalanceSheetAccountsReceivableAccountForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteBalanceSheetAccountsReceivableAccountForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutBalanceSheetAccountsReceivableAccountForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/balance-sheet-billable-expenses-account-form": {
        "post": {
          "operationId": "PostBalanceSheetBillableExpensesAccountForm",
          "summary": "BalanceSheetBillableExpensesAccountForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/balance-sheet-billable-expenses-account-form/{key}": {
        "get": {
          "operationId": "GetBalanceSheetBillableExpensesAccountForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteBalanceSheetBillableExpensesAccountForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutBalanceSheetBillableExpensesAccountForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/balance-sheet-billable-time-account-form": {
        "post": {
          "operationId": "PostBalanceSheetBillableTimeAccountForm",
          "summary": "BalanceSheetBillableTimeAccountForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/balance-sheet-billable-time-account-form/{key}": {
        "get": {
          "operationId": "GetBalanceSheetBillableTimeAccountForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteBalanceSheetBillableTimeAccountForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutBalanceSheetBillableTimeAccountForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/balance-sheet-capital-accounts-account-form": {
        "post": {
          "operationId": "PostBalanceSheetCapitalAccountsAccountForm",
          "summary": "BalanceSheetCapitalAccountsAccountForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/balance-sheet-capital-accounts-account-form/{key}": {
        "get": {
          "operationId": "GetBalanceSheetCapitalAccountsAccountForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteBalanceSheetCapitalAccountsAccountForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutBalanceSheetCapitalAccountsAccountForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/balance-sheet-cash-at-bank-account-form": {
        "post": {
          "operationId": "PostBalanceSheetCashAtBankAccountForm",
          "summary": "BalanceSheetCashAtBankAccountForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/balance-sheet-cash-at-bank-account-form/{key}": {
        "get": {
          "operationId": "GetBalanceSheetCashAtBankAccountForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteBalanceSheetCashAtBankAccountForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutBalanceSheetCashAtBankAccountForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/balance-sheet-employee-clearing-account-form": {
        "post": {
          "operationId": "PostBalanceSheetEmployeeClearingAccountForm",
          "summary": "BalanceSheetEmployeeClearingAccountForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/balance-sheet-employee-clearing-account-form/{key}": {
        "get": {
          "operationId": "GetBalanceSheetEmployeeClearingAccountForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteBalanceSheetEmployeeClearingAccountForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutBalanceSheetEmployeeClearingAccountForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/balance-sheet-equity-group-name-form": {
        "post": {
          "operationId": "PostBalanceSheetEquityGroupNameForm",
          "summary": "BalanceSheetEquityGroupNameForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/balance-sheet-equity-group-name-form/{key}": {
        "get": {
          "operationId": "GetBalanceSheetEquityGroupNameForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteBalanceSheetEquityGroupNameForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutBalanceSheetEquityGroupNameForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/balance-sheet-expense-claims-account-form": {
        "post": {
          "operationId": "PostBalanceSheetExpenseClaimsAccountForm",
          "summary": "BalanceSheetExpenseClaimsAccountForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/balance-sheet-expense-claims-account-form/{key}": {
        "get": {
          "operationId": "GetBalanceSheetExpenseClaimsAccountForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteBalanceSheetExpenseClaimsAccountForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutBalanceSheetExpenseClaimsAccountForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/balance-sheet-fixed-assets-accumulated-depreciation-account-form": {
        "post": {
          "operationId": "PostBalanceSheetFixedAssetsAccumulatedDepreciationAccountForm",
          "summary": "BalanceSheetFixedAssetsAccumulatedDepreciationAccountForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/balance-sheet-fixed-assets-accumulated-depreciation-account-form/{key}": {
        "get": {
          "operationId": "GetBalanceSheetFixedAssetsAccumulatedDepreciationAccountForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteBalanceSheetFixedAssetsAccumulatedDepreciationAccountForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutBalanceSheetFixedAssetsAccumulatedDepreciationAccountForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/balance-sheet-fixed-assets-at-cost-account-form": {
        "post": {
          "operationId": "PostBalanceSheetFixedAssetsAtCostAccountForm",
          "summary": "BalanceSheetFixedAssetsAtCostAccountForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/balance-sheet-fixed-assets-at-cost-account-form/{key}": {
        "get": {
          "operationId": "GetBalanceSheetFixedAssetsAtCostAccountForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteBalanceSheetFixedAssetsAtCostAccountForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutBalanceSheetFixedAssetsAtCostAccountForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/balance-sheet-group-form": {
        "post": {
          "operationId": "PostBalanceSheetGroupForm",
          "summary": "BalanceSheetGroupForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/balance-sheet-group-form/{key}": {
        "get": {
          "operationId": "GetBalanceSheetGroupForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteBalanceSheetGroupForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutBalanceSheetGroupForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/balance-sheet-intangible-assets-accumulated-amortization-account-form": {
        "post": {
          "operationId": "PostBalanceSheetIntangibleAssetsAccumulatedAmortizationAccountForm",
          "summary": "BalanceSheetIntangibleAssetsAccumulatedAmortizationAccountForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/balance-sheet-intangible-assets-accumulated-amortization-account-form/{key}": {
        "get": {
          "operationId": "GetBalanceSheetIntangibleAssetsAccumulatedAmortizationAccountForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteBalanceSheetIntangibleAssetsAccumulatedAmortizationAccountForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutBalanceSheetIntangibleAssetsAccumulatedAmortizationAccountForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/balance-sheet-intangible-assets-at-cost-account-form": {
        "post": {
          "operationId": "PostBalanceSheetIntangibleAssetsAtCostAccountForm",
          "summary": "BalanceSheetIntangibleAssetsAtCostAccountForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/balance-sheet-intangible-assets-at-cost-account-form/{key}": {
        "get": {
          "operationId": "GetBalanceSheetIntangibleAssetsAtCostAccountForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteBalanceSheetIntangibleAssetsAtCostAccountForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutBalanceSheetIntangibleAssetsAtCostAccountForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/balance-sheet-inter-account-transfers-form": {
        "post": {
          "operationId": "PostBalanceSheetInterAccountTransfersForm",
          "summary": "BalanceSheetInterAccountTransfersForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/balance-sheet-inter-account-transfers-form/{key}": {
        "get": {
          "operationId": "GetBalanceSheetInterAccountTransfersForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteBalanceSheetInterAccountTransfersForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutBalanceSheetInterAccountTransfersForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/balance-sheet-inventory-on-hand-account-form": {
        "post": {
          "operationId": "PostBalanceSheetInventoryOnHandAccountForm",
          "summary": "BalanceSheetInventoryOnHandAccountForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/balance-sheet-inventory-on-hand-account-form/{key}": {
        "get": {
          "operationId": "GetBalanceSheetInventoryOnHandAccountForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteBalanceSheetInventoryOnHandAccountForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutBalanceSheetInventoryOnHandAccountForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/balance-sheet-investments-account-form": {
        "post": {
          "operationId": "PostBalanceSheetInvestmentsAccountForm",
          "summary": "BalanceSheetInvestmentsAccountForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/balance-sheet-investments-account-form/{key}": {
        "get": {
          "operationId": "GetBalanceSheetInvestmentsAccountForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteBalanceSheetInvestmentsAccountForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutBalanceSheetInvestmentsAccountForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/balance-sheet-production-in-progress-account-form": {
        "post": {
          "operationId": "PostBalanceSheetProductionInProgressAccountForm",
          "summary": "BalanceSheetProductionInProgressAccountForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/balance-sheet-production-in-progress-account-form/{key}": {
        "get": {
          "operationId": "GetBalanceSheetProductionInProgressAccountForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteBalanceSheetProductionInProgressAccountForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutBalanceSheetProductionInProgressAccountForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/balance-sheet-retained-earnings-account-form": {
        "post": {
          "operationId": "PostBalanceSheetRetainedEarningsAccountForm",
          "summary": "BalanceSheetRetainedEarningsAccountForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/balance-sheet-retained-earnings-account-form/{key}": {
        "get": {
          "operationId": "GetBalanceSheetRetainedEarningsAccountForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteBalanceSheetRetainedEarningsAccountForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutBalanceSheetRetainedEarningsAccountForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/balance-sheet-special-accounts-account-form": {
        "post": {
          "operationId": "PostBalanceSheetSpecialAccountsAccountForm",
          "summary": "BalanceSheetSpecialAccountsAccountForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/balance-sheet-special-accounts-account-form/{key}": {
        "get": {
          "operationId": "GetBalanceSheetSpecialAccountsAccountForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteBalanceSheetSpecialAccountsAccountForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutBalanceSheetSpecialAccountsAccountForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/balance-sheet-suspense-account-form": {
        "post": {
          "operationId": "PostBalanceSheetSuspenseAccountForm",
          "summary": "BalanceSheetSuspenseAccountForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/balance-sheet-suspense-account-form/{key}": {
        "get": {
          "operationId": "GetBalanceSheetSuspenseAccountForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteBalanceSheetSuspenseAccountForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutBalanceSheetSuspenseAccountForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/balance-sheet-tax-payable-account-form": {
        "post": {
          "operationId": "PostBalanceSheetTaxPayableAccountForm",
          "summary": "BalanceSheetTaxPayableAccountForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/balance-sheet-tax-payable-account-form/{key}": {
        "get": {
          "operationId": "GetBalanceSheetTaxPayableAccountForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteBalanceSheetTaxPayableAccountForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutBalanceSheetTaxPayableAccountForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/balance-sheet-withholding-tax-account-form": {
        "post": {
          "operationId": "PostBalanceSheetWithholdingTaxAccountForm",
          "summary": "BalanceSheetWithholdingTaxAccountForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/balance-sheet-withholding-tax-account-form/{key}": {
        "get": {
          "operationId": "GetBalanceSheetWithholdingTaxAccountForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteBalanceSheetWithholdingTaxAccountForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutBalanceSheetWithholdingTaxAccountForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/balance-sheet-withholding-tax-payable-account-form": {
        "post": {
          "operationId": "PostBalanceSheetWithholdingTaxPayableAccountForm",
          "summary": "BalanceSheetWithholdingTaxPayableAccountForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/balance-sheet-withholding-tax-payable-account-form/{key}": {
        "get": {
          "operationId": "GetBalanceSheetWithholdingTaxPayableAccountForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteBalanceSheetWithholdingTaxPayableAccountForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutBalanceSheetWithholdingTaxPayableAccountForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/balance-sheet-withholding-tax-receivable-account-form": {
        "post": {
          "operationId": "PostBalanceSheetWithholdingTaxReceivableAccountForm",
          "summary": "BalanceSheetWithholdingTaxReceivableAccountForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/balance-sheet-withholding-tax-receivable-account-form/{key}": {
        "get": {
          "operationId": "GetBalanceSheetWithholdingTaxReceivableAccountForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteBalanceSheetWithholdingTaxReceivableAccountForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutBalanceSheetWithholdingTaxReceivableAccountForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/profit-and-loss-statement-account-billable-expenses-cost-form": {
        "post": {
          "operationId": "PostProfitAndLossStatementAccountBillableExpensesCostForm",
          "summary": "ProfitAndLossStatementAccountBillableExpensesCostForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/profit-and-loss-statement-account-billable-expenses-cost-form/{key}": {
        "get": {
          "operationId": "GetProfitAndLossStatementAccountBillableExpensesCostForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteProfitAndLossStatementAccountBillableExpensesCostForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutProfitAndLossStatementAccountBillableExpensesCostForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/profit-and-loss-statement-account-billable-expenses-invoiced-form": {
        "post": {
          "operationId": "PostProfitAndLossStatementAccountBillableExpensesInvoicedForm",
          "summary": "ProfitAndLossStatementAccountBillableExpensesInvoicedForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/profit-and-loss-statement-account-billable-expenses-invoiced-form/{key}": {
        "get": {
          "operationId": "GetProfitAndLossStatementAccountBillableExpensesInvoicedForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteProfitAndLossStatementAccountBillableExpensesInvoicedForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutProfitAndLossStatementAccountBillableExpensesInvoicedForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/profit-and-loss-statement-account-billable-time-invoiced-form": {
        "post": {
          "operationId": "PostProfitAndLossStatementAccountBillableTimeInvoicedForm",
          "summary": "ProfitAndLossStatementAccountBillableTimeInvoicedForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/profit-and-loss-statement-account-billable-time-invoiced-form/{key}": {
        "get": {
          "operationId": "GetProfitAndLossStatementAccountBillableTimeInvoicedForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteProfitAndLossStatementAccountBillableTimeInvoicedForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutProfitAndLossStatementAccountBillableTimeInvoicedForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/profit-and-loss-statement-account-billable-time-movement-form": {
        "post": {
          "operationId": "PostProfitAndLossStatementAccountBillableTimeMovementForm",
          "summary": "ProfitAndLossStatementAccountBillableTimeMovementForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/profit-and-loss-statement-account-billable-time-movement-form/{key}": {
        "get": {
          "operationId": "GetProfitAndLossStatementAccountBillableTimeMovementForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteProfitAndLossStatementAccountBillableTimeMovementForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutProfitAndLossStatementAccountBillableTimeMovementForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/profit-and-loss-statement-account-capital-gains-on-investments-form": {
        "post": {
          "operationId": "PostProfitAndLossStatementAccountCapitalGainsOnInvestmentsForm",
          "summary": "ProfitAndLossStatementAccountCapitalGainsOnInvestmentsForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/profit-and-loss-statement-account-capital-gains-on-investments-form/{key}": {
        "get": {
          "operationId": "GetProfitAndLossStatementAccountCapitalGainsOnInvestmentsForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteProfitAndLossStatementAccountCapitalGainsOnInvestmentsForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutProfitAndLossStatementAccountCapitalGainsOnInvestmentsForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/profit-and-loss-statement-account-currency-gains-losses-form": {
        "post": {
          "operationId": "PostProfitAndLossStatementAccountCurrencyGainsLossesForm",
          "summary": "ProfitAndLossStatementAccountCurrencyGainsLossesForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/profit-and-loss-statement-account-currency-gains-losses-form/{key}": {
        "get": {
          "operationId": "GetProfitAndLossStatementAccountCurrencyGainsLossesForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteProfitAndLossStatementAccountCurrencyGainsLossesForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutProfitAndLossStatementAccountCurrencyGainsLossesForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/profit-and-loss-statement-account-fixed-asset-depreciation-form": {
        "post": {
          "operationId": "PostProfitAndLossStatementAccountFixedAssetDepreciationForm",
          "summary": "ProfitAndLossStatementAccountFixedAssetDepreciationForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/profit-and-loss-statement-account-fixed-asset-depreciation-form/{key}": {
        "get": {
          "operationId": "GetProfitAndLossStatementAccountFixedAssetDepreciationForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteProfitAndLossStatementAccountFixedAssetDepreciationForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutProfitAndLossStatementAccountFixedAssetDepreciationForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/profit-and-loss-statement-account-fixed-asset-loss-on-disposal-form": {
        "post": {
          "operationId": "PostProfitAndLossStatementAccountFixedAssetLossOnDisposalForm",
          "summary": "ProfitAndLossStatementAccountFixedAssetLossOnDisposalForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/profit-and-loss-statement-account-fixed-asset-loss-on-disposal-form/{key}": {
        "get": {
          "operationId": "GetProfitAndLossStatementAccountFixedAssetLossOnDisposalForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteProfitAndLossStatementAccountFixedAssetLossOnDisposalForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutProfitAndLossStatementAccountFixedAssetLossOnDisposalForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/profit-and-loss-statement-account-form": {
        "post": {
          "operationId": "PostProfitAndLossStatementAccountForm",
          "summary": "ProfitAndLossStatementAccountForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/profit-and-loss-statement-account-form/{key}": {
        "get": {
          "operationId": "GetProfitAndLossStatementAccountForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteProfitAndLossStatementAccountForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutProfitAndLossStatementAccountForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/profit-and-loss-statement-account-intangible-assets-amortization-form": {
        "post": {
          "operationId": "PostProfitAndLossStatementAccountIntangibleAssetsAmortizationForm",
          "summary": "ProfitAndLossStatementAccountIntangibleAssetsAmortizationForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/profit-and-loss-statement-account-intangible-assets-amortization-form/{key}": {
        "get": {
          "operationId": "GetProfitAndLossStatementAccountIntangibleAssetsAmortizationForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteProfitAndLossStatementAccountIntangibleAssetsAmortizationForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutProfitAndLossStatementAccountIntangibleAssetsAmortizationForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/profit-and-loss-statement-account-intangible-assets-gains-loss-on-disposal-form": {
        "post": {
          "operationId": "PostProfitAndLossStatementAccountIntangibleAssetsGainsLossOnDisposalForm",
          "summary": "ProfitAndLossStatementAccountIntangibleAssetsGainsLossOnDisposalForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/profit-and-loss-statement-account-intangible-assets-gains-loss-on-disposal-form/{key}": {
        "get": {
          "operationId": "GetProfitAndLossStatementAccountIntangibleAssetsGainsLossOnDisposalForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteProfitAndLossStatementAccountIntangibleAssetsGainsLossOnDisposalForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutProfitAndLossStatementAccountIntangibleAssetsGainsLossOnDisposalForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/profit-and-loss-statement-account-inventory-purchases-form": {
        "post": {
          "operationId": "PostProfitAndLossStatementAccountInventoryPurchasesForm",
          "summary": "ProfitAndLossStatementAccountInventoryPurchasesForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/profit-and-loss-statement-account-inventory-purchases-form/{key}": {
        "get": {
          "operationId": "GetProfitAndLossStatementAccountInventoryPurchasesForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteProfitAndLossStatementAccountInventoryPurchasesForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutProfitAndLossStatementAccountInventoryPurchasesForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/profit-and-loss-statement-account-inventory-sales-form": {
        "post": {
          "operationId": "PostProfitAndLossStatementAccountInventorySalesForm",
          "summary": "ProfitAndLossStatementAccountInventorySalesForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/profit-and-loss-statement-account-inventory-sales-form/{key}": {
        "get": {
          "operationId": "GetProfitAndLossStatementAccountInventorySalesForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteProfitAndLossStatementAccountInventorySalesForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutProfitAndLossStatementAccountInventorySalesForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/profit-and-loss-statement-account-late-payment-fees-form": {
        "post": {
          "operationId": "PostProfitAndLossStatementAccountLatePaymentFeesForm",
          "summary": "ProfitAndLossStatementAccountLatePaymentFeesForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/profit-and-loss-statement-account-late-payment-fees-form/{key}": {
        "get": {
          "operationId": "GetProfitAndLossStatementAccountLatePaymentFeesForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteProfitAndLossStatementAccountLatePaymentFeesForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutProfitAndLossStatementAccountLatePaymentFeesForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/profit-and-loss-statement-account-rounding-expense-form": {
        "post": {
          "operationId": "PostProfitAndLossStatementAccountRoundingExpenseForm",
          "summary": "ProfitAndLossStatementAccountRoundingExpenseForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/profit-and-loss-statement-account-rounding-expense-form/{key}": {
        "get": {
          "operationId": "GetProfitAndLossStatementAccountRoundingExpenseForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteProfitAndLossStatementAccountRoundingExpenseForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutProfitAndLossStatementAccountRoundingExpenseForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/profit-and-loss-statement-group-form": {
        "post": {
          "operationId": "PostProfitAndLossStatementGroupForm",
          "summary": "ProfitAndLossStatementGroupForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/profit-and-loss-statement-group-form/{key}": {
        "get": {
          "operationId": "GetProfitAndLossStatementGroupForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteProfitAndLossStatementGroupForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutProfitAndLossStatementGroupForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/profit-and-loss-statement-subtotal-form": {
        "post": {
          "operationId": "PostProfitAndLossStatementSubtotalForm",
          "summary": "ProfitAndLossStatementSubtotalForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/profit-and-loss-statement-subtotal-form/{key}": {
        "get": {
          "operationId": "GetProfitAndLossStatementSubtotalForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteProfitAndLossStatementSubtotalForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutProfitAndLossStatementSubtotalForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/profit-and-loss-statement-total-form": {
        "post": {
          "operationId": "PostProfitAndLossStatementTotalForm",
          "summary": "ProfitAndLossStatementTotalForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/profit-and-loss-statement-total-form/{key}": {
        "get": {
          "operationId": "GetProfitAndLossStatementTotalForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteProfitAndLossStatementTotalForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutProfitAndLossStatementTotalForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/cash-flow-statement-financing-activity-group-form": {
        "post": {
          "operationId": "PostCashFlowStatementFinancingActivityGroupForm",
          "summary": "CashFlowStatementFinancingActivityGroupForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/cash-flow-statement-financing-activity-group-form/{key}": {
        "get": {
          "operationId": "GetCashFlowStatementFinancingActivityGroupForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteCashFlowStatementFinancingActivityGroupForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutCashFlowStatementFinancingActivityGroupForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/cash-flow-statement-investing-activity-group-form": {
        "post": {
          "operationId": "PostCashFlowStatementInvestingActivityGroupForm",
          "summary": "CashFlowStatementInvestingActivityGroupForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/cash-flow-statement-investing-activity-group-form/{key}": {
        "get": {
          "operationId": "GetCashFlowStatementInvestingActivityGroupForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteCashFlowStatementInvestingActivityGroupForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutCashFlowStatementInvestingActivityGroupForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/cash-flow-statement-operating-activity-group-form": {
        "post": {
          "operationId": "PostCashFlowStatementOperatingActivityGroupForm",
          "summary": "CashFlowStatementOperatingActivityGroupForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/cash-flow-statement-operating-activity-group-form/{key}": {
        "get": {
          "operationId": "GetCashFlowStatementOperatingActivityGroupForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteCashFlowStatementOperatingActivityGroupForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutCashFlowStatementOperatingActivityGroupForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/capital-subaccount-form": {
        "post": {
          "operationId": "PostCapitalSubaccountForm",
          "summary": "CapitalSubaccountForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/capital-subaccount-form/{key}": {
        "get": {
          "operationId": "GetCapitalSubaccountForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteCapitalSubaccountForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutCapitalSubaccountForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/business-details-form": {
        "post": {
          "operationId": "PostBusinessDetailsForm",
          "summary": "BusinessDetailsForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/business-details-form/{key}": {
        "get": {
          "operationId": "GetBusinessDetailsForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteBusinessDetailsForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutBusinessDetailsForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/billable-expenses-form": {
        "post": {
          "operationId": "PostBillableExpensesForm",
          "summary": "BillableExpensesForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/billable-expenses-form/{key}": {
        "get": {
          "operationId": "GetBillableExpensesForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteBillableExpensesForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutBillableExpensesForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/receipt-rule-form": {
        "post": {
          "operationId": "PostReceiptRuleForm",
          "summary": "ReceiptRuleForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/receipt-rule-form/{key}": {
        "get": {
          "operationId": "GetReceiptRuleForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteReceiptRuleForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutReceiptRuleForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/payment-rule-form": {
        "post": {
          "operationId": "PostPaymentRuleForm",
          "summary": "PaymentRuleForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/payment-rule-form/{key}": {
        "get": {
          "operationId": "GetPaymentRuleForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeletePaymentRuleForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutPaymentRuleForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/bank-feed-provider-form": {
        "post": {
          "operationId": "PostBankFeedProviderForm",
          "summary": "BankFeedProviderForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/bank-feed-provider-form/{key}": {
        "get": {
          "operationId": "GetBankFeedProviderForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteBankFeedProviderForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutBankFeedProviderForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/access-token-form": {
        "post": {
          "operationId": "PostAccessTokenForm",
          "summary": "AccessTokenForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/access-token-form/{key}": {
        "get": {
          "operationId": "GetAccessTokenForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteAccessTokenForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutAccessTokenForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/sales-quote-form": {
        "post": {
          "operationId": "PostSalesQuoteForm",
          "summary": "SalesQuoteForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/sales-quote-form/{key}": {
        "get": {
          "operationId": "GetSalesQuoteForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteSalesQuoteForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutSalesQuoteForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/sales-order-form": {
        "post": {
          "operationId": "PostSalesOrderForm",
          "summary": "SalesOrderForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/sales-order-form/{key}": {
        "get": {
          "operationId": "GetSalesOrderForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteSalesOrderForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutSalesOrderForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/sales-invoice-form": {
        "post": {
          "operationId": "PostSalesInvoiceForm",
          "summary": "SalesInvoiceForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/sales-invoice-form/{key}": {
        "get": {
          "operationId": "GetSalesInvoiceForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteSalesInvoiceForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutSalesInvoiceForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/tax-transactions-form": {
        "post": {
          "operationId": "PostTaxTransactionsForm",
          "summary": "TaxTransactionsForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/tax-transactions-form/{key}": {
        "get": {
          "operationId": "GetTaxTransactionsForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteTaxTransactionsForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutTaxTransactionsForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/tax-summary-form": {
        "post": {
          "operationId": "PostTaxSummaryForm",
          "summary": "TaxSummaryForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/tax-summary-form/{key}": {
        "get": {
          "operationId": "GetTaxSummaryForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteTaxSummaryForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutTaxSummaryForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/tax-reconciliation-form": {
        "post": {
          "operationId": "PostTaxReconciliationForm",
          "summary": "TaxReconciliationForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/tax-reconciliation-form/{key}": {
        "get": {
          "operationId": "GetTaxReconciliationForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteTaxReconciliationForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutTaxReconciliationForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/tax-audit-form": {
        "post": {
          "operationId": "PostTaxAuditForm",
          "summary": "TaxAuditForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/tax-audit-form/{key}": {
        "get": {
          "operationId": "GetTaxAuditForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteTaxAuditForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutTaxAuditForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/taxable-sales-per-customer-form": {
        "post": {
          "operationId": "PostTaxableSalesPerCustomerForm",
          "summary": "TaxableSalesPerCustomerForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/taxable-sales-per-customer-form/{key}": {
        "get": {
          "operationId": "GetTaxableSalesPerCustomerForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteTaxableSalesPerCustomerForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutTaxableSalesPerCustomerForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/taxable-purchases-per-supplier-form": {
        "post": {
          "operationId": "PostTaxablePurchasesPerSupplierForm",
          "summary": "TaxablePurchasesPerSupplierForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/taxable-purchases-per-supplier-form/{key}": {
        "get": {
          "operationId": "GetTaxablePurchasesPerSupplierForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteTaxablePurchasesPerSupplierForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutTaxablePurchasesPerSupplierForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/supplier-summary-form": {
        "post": {
          "operationId": "PostSupplierSummaryForm",
          "summary": "SupplierSummaryForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/supplier-summary-form/{key}": {
        "get": {
          "operationId": "GetSupplierSummaryForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteSupplierSummaryForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutSupplierSummaryForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/supplier-statements-unpaid-invoices-form": {
        "post": {
          "operationId": "PostSupplierStatementsUnpaidInvoicesForm",
          "summary": "SupplierStatementsUnpaidInvoicesForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/supplier-statements-unpaid-invoices-form/{key}": {
        "get": {
          "operationId": "GetSupplierStatementsUnpaidInvoicesForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteSupplierStatementsUnpaidInvoicesForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutSupplierStatementsUnpaidInvoicesForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/supplier-statements-transactions-form": {
        "post": {
          "operationId": "PostSupplierStatementsTransactionsForm",
          "summary": "SupplierStatementsTransactionsForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/supplier-statements-transactions-form/{key}": {
        "get": {
          "operationId": "GetSupplierStatementsTransactionsForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteSupplierStatementsTransactionsForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutSupplierStatementsTransactionsForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/aged-payables-form": {
        "post": {
          "operationId": "PostAgedPayablesForm",
          "summary": "AgedPayablesForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/aged-payables-form/{key}": {
        "get": {
          "operationId": "GetAgedPayablesForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteAgedPayablesForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutAgedPayablesForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/sales-invoice-totals-by-item-form": {
        "post": {
          "operationId": "PostSalesInvoiceTotalsByItemForm",
          "summary": "SalesInvoiceTotalsByItemForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/sales-invoice-totals-by-item-form/{key}": {
        "get": {
          "operationId": "GetSalesInvoiceTotalsByItemForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteSalesInvoiceTotalsByItemForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutSalesInvoiceTotalsByItemForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/sales-invoice-totals-by-custom-field-form": {
        "post": {
          "operationId": "PostSalesInvoiceTotalsByCustomFieldForm",
          "summary": "SalesInvoiceTotalsByCustomFieldForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/sales-invoice-totals-by-custom-field-form/{key}": {
        "get": {
          "operationId": "GetSalesInvoiceTotalsByCustomFieldForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteSalesInvoiceTotalsByCustomFieldForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutSalesInvoiceTotalsByCustomFieldForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/sales-invoice-totals-by-customer-form": {
        "post": {
          "operationId": "PostSalesInvoiceTotalsByCustomerForm",
          "summary": "SalesInvoiceTotalsByCustomerForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/sales-invoice-totals-by-customer-form/{key}": {
        "get": {
          "operationId": "GetSalesInvoiceTotalsByCustomerForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteSalesInvoiceTotalsByCustomerForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutSalesInvoiceTotalsByCustomerForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/report-transformation-report-form": {
        "post": {
          "operationId": "PostReportTransformationReportForm",
          "summary": "ReportTransformationReportForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/report-transformation-report-form/{key}": {
        "get": {
          "operationId": "GetReportTransformationReportForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteReportTransformationReportForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutReportTransformationReportForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/payslip-totals-per-item-and-employee-form": {
        "post": {
          "operationId": "PostPayslipTotalsPerItemAndEmployeeForm",
          "summary": "PayslipTotalsPerItemAndEmployeeForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/payslip-totals-per-item-and-employee-form/{key}": {
        "get": {
          "operationId": "GetPayslipTotalsPerItemAndEmployeeForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeletePayslipTotalsPerItemAndEmployeeForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutPayslipTotalsPerItemAndEmployeeForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/payslip-summary-form": {
        "post": {
          "operationId": "PostPayslipSummaryForm",
          "summary": "PayslipSummaryForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/payslip-summary-form/{key}": {
        "get": {
          "operationId": "GetPayslipSummaryForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeletePayslipSummaryForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutPayslipSummaryForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/employee-summary-form": {
        "post": {
          "operationId": "PostEmployeeSummaryForm",
          "summary": "EmployeeSummaryForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/employee-summary-form/{key}": {
        "get": {
          "operationId": "GetEmployeeSummaryForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteEmployeeSummaryForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutEmployeeSummaryForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/realized-investment-gains-summary-form": {
        "post": {
          "operationId": "PostRealizedInvestmentGainsSummaryForm",
          "summary": "RealizedInvestmentGainsSummaryForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/realized-investment-gains-summary-form/{key}": {
        "get": {
          "operationId": "GetRealizedInvestmentGainsSummaryForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteRealizedInvestmentGainsSummaryForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutRealizedInvestmentGainsSummaryForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/inventory-value-summary-form": {
        "post": {
          "operationId": "PostInventoryValueSummaryForm",
          "summary": "InventoryValueSummaryForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/inventory-value-summary-form/{key}": {
        "get": {
          "operationId": "GetInventoryValueSummaryForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteInventoryValueSummaryForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutInventoryValueSummaryForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/inventory-quantity-summary-form": {
        "post": {
          "operationId": "PostInventoryQuantitySummaryForm",
          "summary": "InventoryQuantitySummaryForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/inventory-quantity-summary-form/{key}": {
        "get": {
          "operationId": "GetInventoryQuantitySummaryForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteInventoryQuantitySummaryForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutInventoryQuantitySummaryForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/inventory-quantity-by-location-form": {
        "post": {
          "operationId": "PostInventoryQuantityByLocationForm",
          "summary": "InventoryQuantityByLocationForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/inventory-quantity-by-location-form/{key}": {
        "get": {
          "operationId": "GetInventoryQuantityByLocationForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteInventoryQuantityByLocationForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutInventoryQuantityByLocationForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/inventory-profit-margin-form": {
        "post": {
          "operationId": "PostInventoryProfitMarginForm",
          "summary": "InventoryProfitMarginForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/inventory-profit-margin-form/{key}": {
        "get": {
          "operationId": "GetInventoryProfitMarginForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteInventoryProfitMarginForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutInventoryProfitMarginForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/inventory-price-list-form": {
        "post": {
          "operationId": "PostInventoryPriceListForm",
          "summary": "InventoryPriceListForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/inventory-price-list-form/{key}": {
        "get": {
          "operationId": "GetInventoryPriceListForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteInventoryPriceListForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutInventoryPriceListForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/intangible-asset-summary-form": {
        "post": {
          "operationId": "PostIntangibleAssetSummaryForm",
          "summary": "IntangibleAssetSummaryForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/intangible-asset-summary-form/{key}": {
        "get": {
          "operationId": "GetIntangibleAssetSummaryForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteIntangibleAssetSummaryForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutIntangibleAssetSummaryForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/amortization-calculation-worksheet-form": {
        "post": {
          "operationId": "PostAmortizationCalculationWorksheetForm",
          "summary": "AmortizationCalculationWorksheetForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/amortization-calculation-worksheet-form/{key}": {
        "get": {
          "operationId": "GetAmortizationCalculationWorksheetForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteAmortizationCalculationWorksheetForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutAmortizationCalculationWorksheetForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/trial-balance-form": {
        "post": {
          "operationId": "PostTrialBalanceForm",
          "summary": "TrialBalanceForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/trial-balance-form/{key}": {
        "get": {
          "operationId": "GetTrialBalanceForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteTrialBalanceForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutTrialBalanceForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/general-ledger-transactions-form": {
        "post": {
          "operationId": "PostGeneralLedgerTransactionsForm",
          "summary": "GeneralLedgerTransactionsForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/general-ledger-transactions-form/{key}": {
        "get": {
          "operationId": "GetGeneralLedgerTransactionsForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteGeneralLedgerTransactionsForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutGeneralLedgerTransactionsForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/general-ledger-summary-form": {
        "post": {
          "operationId": "PostGeneralLedgerSummaryForm",
          "summary": "GeneralLedgerSummaryForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/general-ledger-summary-form/{key}": {
        "get": {
          "operationId": "GetGeneralLedgerSummaryForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteGeneralLedgerSummaryForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutGeneralLedgerSummaryForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/fixed-asset-summary-form": {
        "post": {
          "operationId": "PostFixedAssetSummaryForm",
          "summary": "FixedAssetSummaryForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/fixed-asset-summary-form/{key}": {
        "get": {
          "operationId": "GetFixedAssetSummaryForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteFixedAssetSummaryForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutFixedAssetSummaryForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/depreciation-calculation-worksheet-form": {
        "post": {
          "operationId": "PostDepreciationCalculationWorksheetForm",
          "summary": "DepreciationCalculationWorksheetForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/depreciation-calculation-worksheet-form/{key}": {
        "get": {
          "operationId": "GetDepreciationCalculationWorksheetForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteDepreciationCalculationWorksheetForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutDepreciationCalculationWorksheetForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/statement-of-changes-in-equity-form": {
        "post": {
          "operationId": "PostStatementOfChangesInEquityForm",
          "summary": "StatementOfChangesInEquityForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/statement-of-changes-in-equity-form/{key}": {
        "get": {
          "operationId": "GetStatementOfChangesInEquityForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteStatementOfChangesInEquityForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutStatementOfChangesInEquityForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/profit-and-loss-statement-actual-vs-budget-form": {
        "post": {
          "operationId": "PostProfitAndLossStatementActualVsBudgetForm",
          "summary": "ProfitAndLossStatementActualVsBudgetForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/profit-and-loss-statement-actual-vs-budget-form/{key}": {
        "get": {
          "operationId": "GetProfitAndLossStatementActualVsBudgetForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteProfitAndLossStatementActualVsBudgetForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutProfitAndLossStatementActualVsBudgetForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/profit-and-loss-statement-form": {
        "post": {
          "operationId": "PostProfitAndLossStatementForm",
          "summary": "ProfitAndLossStatementForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/profit-and-loss-statement-form/{key}": {
        "get": {
          "operationId": "GetProfitAndLossStatementForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteProfitAndLossStatementForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutProfitAndLossStatementForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/forecast-profit-and-loss-statement-form": {
        "post": {
          "operationId": "PostForecastProfitAndLossStatementForm",
          "summary": "ForecastProfitAndLossStatementForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/forecast-profit-and-loss-statement-form/{key}": {
        "get": {
          "operationId": "GetForecastProfitAndLossStatementForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteForecastProfitAndLossStatementForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutForecastProfitAndLossStatementForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/cash-flow-statement-form": {
        "post": {
          "operationId": "PostCashFlowStatementForm",
          "summary": "CashFlowStatementForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/cash-flow-statement-form/{key}": {
        "get": {
          "operationId": "GetCashFlowStatementForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteCashFlowStatementForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutCashFlowStatementForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/balance-sheet-form": {
        "post": {
          "operationId": "PostBalanceSheetForm",
          "summary": "BalanceSheetForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/balance-sheet-form/{key}": {
        "get": {
          "operationId": "GetBalanceSheetForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteBalanceSheetForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutBalanceSheetForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/expense-claims-summary-form": {
        "post": {
          "operationId": "PostExpenseClaimsSummaryForm",
          "summary": "ExpenseClaimsSummaryForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/expense-claims-summary-form/{key}": {
        "get": {
          "operationId": "GetExpenseClaimsSummaryForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteExpenseClaimsSummaryForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutExpenseClaimsSummaryForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/division-exception-report-form": {
        "post": {
          "operationId": "PostDivisionExceptionReportForm",
          "summary": "DivisionExceptionReportForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/division-exception-report-form/{key}": {
        "get": {
          "operationId": "GetDivisionExceptionReportForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteDivisionExceptionReportForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutDivisionExceptionReportForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/custom-report-form": {
        "post": {
          "operationId": "PostCustomReportForm",
          "summary": "CustomReportForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/custom-report-form/{key}": {
        "get": {
          "operationId": "GetCustomReportForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteCustomReportForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutCustomReportForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/customer-summary-form": {
        "post": {
          "operationId": "PostCustomerSummaryForm",
          "summary": "CustomerSummaryForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/customer-summary-form/{key}": {
        "get": {
          "operationId": "GetCustomerSummaryForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteCustomerSummaryForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutCustomerSummaryForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/customer-statements-unpaid-invoices-form": {
        "post": {
          "operationId": "PostCustomerStatementsUnpaidInvoicesForm",
          "summary": "CustomerStatementsUnpaidInvoicesForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/customer-statements-unpaid-invoices-form/{key}": {
        "get": {
          "operationId": "GetCustomerStatementsUnpaidInvoicesForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteCustomerStatementsUnpaidInvoicesForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutCustomerStatementsUnpaidInvoicesForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/customer-statements-transactions-form": {
        "post": {
          "operationId": "PostCustomerStatementsTransactionsForm",
          "summary": "CustomerStatementsTransactionsForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/customer-statements-transactions-form/{key}": {
        "get": {
          "operationId": "GetCustomerStatementsTransactionsForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteCustomerStatementsTransactionsForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutCustomerStatementsTransactionsForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/aged-receivables-form": {
        "post": {
          "operationId": "PostAgedReceivablesForm",
          "summary": "AgedReceivablesForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/aged-receivables-form/{key}": {
        "get": {
          "operationId": "GetAgedReceivablesForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteAgedReceivablesForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutAgedReceivablesForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/realized-currency-gains-losses-form": {
        "post": {
          "operationId": "PostRealizedCurrencyGainsLossesForm",
          "summary": "RealizedCurrencyGainsLossesForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/realized-currency-gains-losses-form/{key}": {
        "get": {
          "operationId": "GetRealizedCurrencyGainsLossesForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteRealizedCurrencyGainsLossesForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutRealizedCurrencyGainsLossesForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/capital-accounts-summary-form": {
        "post": {
          "operationId": "PostCapitalAccountsSummaryForm",
          "summary": "CapitalAccountsSummaryForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/capital-accounts-summary-form/{key}": {
        "get": {
          "operationId": "GetCapitalAccountsSummaryForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteCapitalAccountsSummaryForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutCapitalAccountsSummaryForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/billable-time-summary-form": {
        "post": {
          "operationId": "PostBillableTimeSummaryForm",
          "summary": "BillableTimeSummaryForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/billable-time-summary-form/{key}": {
        "get": {
          "operationId": "GetBillableTimeSummaryForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteBillableTimeSummaryForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutBillableTimeSummaryForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/receipts-and-payments-summary-form": {
        "post": {
          "operationId": "PostReceiptsAndPaymentsSummaryForm",
          "summary": "ReceiptsAndPaymentsSummaryForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/receipts-and-payments-summary-form/{key}": {
        "get": {
          "operationId": "GetReceiptsAndPaymentsSummaryForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteReceiptsAndPaymentsSummaryForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutReceiptsAndPaymentsSummaryForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/bank-account-summary-form": {
        "post": {
          "operationId": "PostBankAccountSummaryForm",
          "summary": "BankAccountSummaryForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/bank-account-summary-form/{key}": {
        "get": {
          "operationId": "GetBankAccountSummaryForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteBankAccountSummaryForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutBankAccountSummaryForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/receipt-form": {
        "post": {
          "operationId": "PostReceiptForm",
          "summary": "ReceiptForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/receipt-form/{key}": {
        "get": {
          "operationId": "GetReceiptForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteReceiptForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutReceiptForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/purchase-quote-form": {
        "post": {
          "operationId": "PostPurchaseQuoteForm",
          "summary": "PurchaseQuoteForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/purchase-quote-form/{key}": {
        "get": {
          "operationId": "GetPurchaseQuoteForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeletePurchaseQuoteForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutPurchaseQuoteForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/purchase-order-form": {
        "post": {
          "operationId": "PostPurchaseOrderForm",
          "summary": "PurchaseOrderForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/purchase-order-form/{key}": {
        "get": {
          "operationId": "GetPurchaseOrderForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeletePurchaseOrderForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutPurchaseOrderForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/purchase-invoice-form": {
        "post": {
          "operationId": "PostPurchaseInvoiceForm",
          "summary": "PurchaseInvoiceForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/purchase-invoice-form/{key}": {
        "get": {
          "operationId": "GetPurchaseInvoiceForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeletePurchaseInvoiceForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutPurchaseInvoiceForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/project-form": {
        "post": {
          "operationId": "PostProjectForm",
          "summary": "ProjectForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/project-form/{key}": {
        "get": {
          "operationId": "GetProjectForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteProjectForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutProjectForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/production-order-form": {
        "post": {
          "operationId": "PostProductionOrderForm",
          "summary": "ProductionOrderForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/production-order-form/{key}": {
        "get": {
          "operationId": "GetProductionOrderForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteProductionOrderForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutProductionOrderForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/payslip-form": {
        "post": {
          "operationId": "PostPayslipForm",
          "summary": "PayslipForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/payslip-form/{key}": {
        "get": {
          "operationId": "GetPayslipForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeletePayslipForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutPayslipForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/payment-form": {
        "post": {
          "operationId": "PostPaymentForm",
          "summary": "PaymentForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/payment-form/{key}": {
        "get": {
          "operationId": "GetPaymentForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeletePaymentForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutPaymentForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/late-payment-fee-form": {
        "post": {
          "operationId": "PostLatePaymentFeeForm",
          "summary": "LatePaymentFeeForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/late-payment-fee-form/{key}": {
        "get": {
          "operationId": "GetLatePaymentFeeForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteLatePaymentFeeForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutLatePaymentFeeForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/journal-entry-form": {
        "post": {
          "operationId": "PostJournalEntryForm",
          "summary": "JournalEntryForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/journal-entry-form/{key}": {
        "get": {
          "operationId": "GetJournalEntryForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteJournalEntryForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutJournalEntryForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/inventment-form": {
        "post": {
          "operationId": "PostInventmentForm",
          "summary": "InventmentForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/inventment-form/{key}": {
        "get": {
          "operationId": "GetInventmentForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteInventmentForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutInventmentForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/inventory-write-off-form": {
        "post": {
          "operationId": "PostInventoryWriteOffForm",
          "summary": "InventoryWriteOffForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/inventory-write-off-form/{key}": {
        "get": {
          "operationId": "GetInventoryWriteOffForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteInventoryWriteOffForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutInventoryWriteOffForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/inventory-transfer-form": {
        "post": {
          "operationId": "PostInventoryTransferForm",
          "summary": "InventoryTransferForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/inventory-transfer-form/{key}": {
        "get": {
          "operationId": "GetInventoryTransferForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteInventoryTransferForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutInventoryTransferForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/inventory-item-form": {
        "post": {
          "operationId": "PostInventoryItemForm",
          "summary": "InventoryItemForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/inventory-item-form/{key}": {
        "get": {
          "operationId": "GetInventoryItemForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteInventoryItemForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutInventoryItemForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/inter-account-transfer-form": {
        "post": {
          "operationId": "PostInterAccountTransferForm",
          "summary": "InterAccountTransferForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/inter-account-transfer-form/{key}": {
        "get": {
          "operationId": "GetInterAccountTransferForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteInterAccountTransferForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutInterAccountTransferForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/intangible-asset-form": {
        "post": {
          "operationId": "PostIntangibleAssetForm",
          "summary": "IntangibleAssetForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/intangible-asset-form/{key}": {
        "get": {
          "operationId": "GetIntangibleAssetForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteIntangibleAssetForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutIntangibleAssetForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/goods-receipt-form": {
        "post": {
          "operationId": "PostGoodsReceiptForm",
          "summary": "GoodsReceiptForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/goods-receipt-form/{key}": {
        "get": {
          "operationId": "GetGoodsReceiptForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteGoodsReceiptForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutGoodsReceiptForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/folder-form": {
        "post": {
          "operationId": "PostFolderForm",
          "summary": "FolderForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/folder-form/{key}": {
        "get": {
          "operationId": "GetFolderForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteFolderForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutFolderForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/fixed-asset-form": {
        "post": {
          "operationId": "PostFixedAssetForm",
          "summary": "FixedAssetForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/fixed-asset-form/{key}": {
        "get": {
          "operationId": "GetFixedAssetForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteFixedAssetForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutFixedAssetForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/expense-claim-form": {
        "post": {
          "operationId": "PostExpenseClaimForm",
          "summary": "ExpenseClaimForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/expense-claim-form/{key}": {
        "get": {
          "operationId": "GetExpenseClaimForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteExpenseClaimForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutExpenseClaimForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/employee-form": {
        "post": {
          "operationId": "PostEmployeeForm",
          "summary": "EmployeeForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/employee-form/{key}": {
        "get": {
          "operationId": "GetEmployeeForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteEmployeeForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutEmployeeForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/depreciation-entry-form": {
        "post": {
          "operationId": "PostDepreciationEntryForm",
          "summary": "DepreciationEntryForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/depreciation-entry-form/{key}": {
        "get": {
          "operationId": "GetDepreciationEntryForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteDepreciationEntryForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutDepreciationEntryForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/delivery-note-form": {
        "post": {
          "operationId": "PostDeliveryNoteForm",
          "summary": "DeliveryNoteForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/delivery-note-form/{key}": {
        "get": {
          "operationId": "GetDeliveryNoteForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteDeliveryNoteForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutDeliveryNoteForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/debit-note-form": {
        "post": {
          "operationId": "PostDebitNoteForm",
          "summary": "DebitNoteForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/debit-note-form/{key}": {
        "get": {
          "operationId": "GetDebitNoteForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteDebitNoteForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutDebitNoteForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/customer-form": {
        "post": {
          "operationId": "PostCustomerForm",
          "summary": "CustomerForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/customer-form/{key}": {
        "get": {
          "operationId": "GetCustomerForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteCustomerForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutCustomerForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/credit-note-form": {
        "post": {
          "operationId": "PostCreditNoteForm",
          "summary": "CreditNoteForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/credit-note-form/{key}": {
        "get": {
          "operationId": "GetCreditNoteForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteCreditNoteForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutCreditNoteForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/capital-account-form": {
        "post": {
          "operationId": "PostCapitalAccountForm",
          "summary": "CapitalAccountForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/capital-account-form/{key}": {
        "get": {
          "operationId": "GetCapitalAccountForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteCapitalAccountForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutCapitalAccountForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/billable-time-entry-form": {
        "post": {
          "operationId": "PostBillableTimeEntryForm",
          "summary": "BillableTimeEntryForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/billable-time-entry-form/{key}": {
        "get": {
          "operationId": "GetBillableTimeEntryForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteBillableTimeEntryForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutBillableTimeEntryForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/bank-reconciliation-form": {
        "post": {
          "operationId": "PostBankReconciliationForm",
          "summary": "BankReconciliationForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/bank-reconciliation-form/{key}": {
        "get": {
          "operationId": "GetBankReconciliationForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteBankReconciliationForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutBankReconciliationForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/bank-or-cash-account-form": {
        "post": {
          "operationId": "PostBankOrCashAccountForm",
          "summary": "BankOrCashAccountForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/bank-or-cash-account-form/{key}": {
        "get": {
          "operationId": "GetBankOrCashAccountForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteBankOrCashAccountForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutBankOrCashAccountForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/attachment-form": {
        "post": {
          "operationId": "PostAttachmentForm",
          "summary": "AttachmentForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/attachment-form/{key}": {
        "get": {
          "operationId": "GetAttachmentForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteAttachmentForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutAttachmentForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/amortization-entry-form": {
        "post": {
          "operationId": "PostAmortizationEntryForm",
          "summary": "AmortizationEntryForm",
          "description": "Create a new resource",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Resource created"
            }
          }
        }
      },
      "/amortization-entry-form/{key}": {
        "get": {
          "operationId": "GetAmortizationEntryForm",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        },
        "delete": {
          "operationId": "DeleteAmortizationEntryForm",
          "summary": "Delete a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            }
          }
        },
        "put": {
          "operationId": "PutAmortizationEntryForm",
          "summary": "Put a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/tax-transactions-view/{key}": {
        "get": {
          "operationId": "GetTaxTransactionsView",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/tax-summary-view/{key}": {
        "get": {
          "operationId": "GetTaxSummaryView",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/tax-reconciliation-view/{key}": {
        "get": {
          "operationId": "GetTaxReconciliationView",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/tax-audit-view/{key}": {
        "get": {
          "operationId": "GetTaxAuditView",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/taxable-sales-per-customer-view/{key}": {
        "get": {
          "operationId": "GetTaxableSalesPerCustomerView",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/taxable-purchases-per-supplier-view/{key}": {
        "get": {
          "operationId": "GetTaxablePurchasesPerSupplierView",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/supplier-summary-view/{key}": {
        "get": {
          "operationId": "GetSupplierSummaryView",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/aged-payables-view/{key}": {
        "get": {
          "operationId": "GetAgedPayablesView",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/sales-invoice-totals-by-item-view/{key}": {
        "get": {
          "operationId": "GetSalesInvoiceTotalsByItemView",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/sales-invoice-totals-by-custom-field-view/{key}": {
        "get": {
          "operationId": "GetSalesInvoiceTotalsByCustomFieldView",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/sales-invoice-totals-by-customer-view/{key}": {
        "get": {
          "operationId": "GetSalesInvoiceTotalsByCustomerView",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/payslip-totals-per-item-and-employee-view/{key}": {
        "get": {
          "operationId": "GetPayslipTotalsPerItemAndEmployeeView",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/payslip-summary-view/{key}": {
        "get": {
          "operationId": "GetPayslipSummaryView",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/employee-summary-view/{key}": {
        "get": {
          "operationId": "GetEmployeeSummaryView",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/realized-investment-gains-summary-view/{key}": {
        "get": {
          "operationId": "GetRealizedInvestmentGainsSummaryView",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/inventory-value-summary-view/{key}": {
        "get": {
          "operationId": "GetInventoryValueSummaryView",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/inventory-quantity-summary-view/{key}": {
        "get": {
          "operationId": "GetInventoryQuantitySummaryView",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/inventory-quantity-by-location-view/{key}": {
        "get": {
          "operationId": "GetInventoryQuantityByLocationView",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/inventory-profit-margin-view/{key}": {
        "get": {
          "operationId": "GetInventoryProfitMarginView",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/inventory-price-list-view/{key}": {
        "get": {
          "operationId": "GetInventoryPriceListView",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/intangible-asset-summary-view/{key}": {
        "get": {
          "operationId": "GetIntangibleAssetSummaryView",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/amortization-calculation-worksheet-view/{key}": {
        "get": {
          "operationId": "GetAmortizationCalculationWorksheetView",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/trial-balance-view/{key}": {
        "get": {
          "operationId": "GetTrialBalanceView",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/general-ledger-transactions-view/{key}": {
        "get": {
          "operationId": "GetGeneralLedgerTransactionsView",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/general-ledger-summary-view/{key}": {
        "get": {
          "operationId": "GetGeneralLedgerSummaryView",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/fixed-asset-summary-view/{key}": {
        "get": {
          "operationId": "GetFixedAssetSummaryView",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/depreciation-calculation-worksheet-view/{key}": {
        "get": {
          "operationId": "GetDepreciationCalculationWorksheetView",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/statement-of-changes-in-equity-view/{key}": {
        "get": {
          "operationId": "GetStatementOfChangesInEquityView",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/profit-and-loss-statement-actual-vs-budget-view/{key}": {
        "get": {
          "operationId": "GetProfitAndLossStatementActualVsBudgetView",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/profit-and-loss-statement-view/{key}": {
        "get": {
          "operationId": "GetProfitAndLossStatementView",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/forecast-profit-and-loss-statement-view/{key}": {
        "get": {
          "operationId": "GetForecastProfitAndLossStatementView",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/cash-flow-statement-view/{key}": {
        "get": {
          "operationId": "GetCashFlowStatementView",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/balance-sheet-view/{key}": {
        "get": {
          "operationId": "GetBalanceSheetView",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/expense-claims-summary-view/{key}": {
        "get": {
          "operationId": "GetExpenseClaimsSummaryView",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/division-exception-report-view/{key}": {
        "get": {
          "operationId": "GetDivisionExceptionReportView",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/customer-summary-view/{key}": {
        "get": {
          "operationId": "GetCustomerSummaryView",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/aged-receivables-view/{key}": {
        "get": {
          "operationId": "GetAgedReceivablesView",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/realized-currency-gains-losses-view/{key}": {
        "get": {
          "operationId": "GetRealizedCurrencyGainsLossesView",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/capital-accounts-summary-view/{key}": {
        "get": {
          "operationId": "GetCapitalAccountsSummaryView",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/billable-time-summary-view/{key}": {
        "get": {
          "operationId": "GetBillableTimeSummaryView",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/receipts-and-payments-summary-view/{key}": {
        "get": {
          "operationId": "GetReceiptsAndPaymentsSummaryView",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/bank-account-summary-view/{key}": {
        "get": {
          "operationId": "GetBankAccountSummaryView",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/project-report-view/{key}": {
        "get": {
          "operationId": "GetProjectReportView",
          "summary": "Get a resource by Key",
          "parameters": [
            {
              "name": "key",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      }
    },
    "components": {
      "schemas": {},
      "securitySchemes": {
        "ApiKeyAuth": {
          "type": "apiKey",
          "in": "header",
          "name": "X-API-KEY"
        }
      }
    },
    "security": [
      {
        "ApiKeyAuth": []
      }
    ],
    "x-readme": {
      "proxy-enabled": false
    }
  }